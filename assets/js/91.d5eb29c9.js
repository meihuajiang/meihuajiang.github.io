(window.webpackJsonp=window.webpackJsonp||[]).push([[91],{350:function(e,s,a){"use strict";a.r(s);var r=a(9),t=Object(r.a)({},(function(){var e=this,s=e.$createElement,a=e._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"待填坑"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#待填坑"}},[e._v("#")]),e._v(" 待填坑")]),e._v(" "),a("h2",{attrs:{id:"nodejs特点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nodejs特点"}},[e._v("#")]),e._v(" nodejs特点")]),e._v(" "),a("h2",{attrs:{id:"koa和express"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#koa和express"}},[e._v("#")]),e._v(" koa和express")]),e._v(" "),a("h2",{attrs:{id:"express"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#express"}},[e._v("#")]),e._v(" express")]),e._v(" "),a("p",[e._v("express 框架的核心特性")]),e._v(" "),a("ul",[a("li",[e._v("可以设置中间件来响应 HTTP 请求。")]),e._v(" "),a("li",[e._v("定义了路由表用于执行不同的 HTTP 请求动作。")]),e._v(" "),a("li",[e._v("可以通过向模板传递参数来动态渲染 HTML页面。")])]),e._v(" "),a("h3",{attrs:{id:"express-的中间件系统是如何设计的？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#express-的中间件系统是如何设计的？"}},[e._v("#")]),e._v(" express 的中间件系统是如何设计的？")]),e._v(" "),a("h2",{attrs:{id:"全局对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#全局对象"}},[e._v("#")]),e._v(" 全局对象")]),e._v(" "),a("p",[e._v("Node.js 中的全局对象是 global，")]),e._v(" "),a("h2",{attrs:{id:"常用api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用api"}},[e._v("#")]),e._v(" 常用api")]),e._v(" "),a("h2",{attrs:{id:"node-js-中-require-xxx-是从哪里导入的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#node-js-中-require-xxx-是从哪里导入的"}},[e._v("#")]),e._v(" node.js 中 require('xxx') 是从哪里导入的")]),e._v(" "),a("p",[e._v("路径形式\n核心模块\n第三方模块")]),e._v(" "),a("h2",{attrs:{id:"路径引用顺序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#路径引用顺序"}},[e._v("#")]),e._v(" 路径引用顺序")]),e._v(" "),a("p",[e._v("require函数支持斜杠（/）或盘符（C:）开头的绝对路径，也支持./开头的相对路径。但这两种路径在模块之间建立了强耦合关系")]),e._v(" "),a("p",[e._v("require函数支持第三种形式的路径，写法类似于foo/bar，并依次按照以下规则解析路径，直到找到模块位置。")]),e._v(" "),a("ol",[a("li",[a("p",[e._v("内置模块")]),e._v(" "),a("p",[e._v("如果传递给require函数的是NodeJS内置模块名称，不做路径解析，直接返回内部模块的导出对象，例如"),a("code",[e._v("require('fs')")]),e._v("。")])]),e._v(" "),a("li",[a("p",[e._v("node_modules目录")]),e._v(" "),a("p",[e._v("NodeJS定义了一个特殊的node_modules目录用于存放模块。例如某个模块的绝对路径是"),a("code",[e._v("/home/user/hello.js")]),e._v("，在该模块中使用"),a("code",[e._v("require('foo/bar')")]),e._v("方式加载模块时，则NodeJS依次尝试使用以下路径。")]),e._v(" "),a("div",{staticClass:"language-md extra-class"},[a("pre",{pre:!0,attrs:{class:"language-md"}},[a("code",[e._v("/home/user/node"),a("span",{pre:!0,attrs:{class:"token italic"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("_")]),a("span",{pre:!0,attrs:{class:"token content"}},[e._v("modules/foo/bar\n/home/node")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("_")])]),e._v("modules/foo/bar\n/node_modules/foo/bar\n")])])])]),e._v(" "),a("li",[a("p",[e._v("NODE_PATH环境变量")]),e._v(" "),a("p",[e._v("与PATH环境变量类似，NodeJS允许通过NODE_PATH环境变量来指定额外的模块搜索路径。NODE_PATH环境变量中包含一到多个目录路径，路径之间在Linux下使用:分隔，在Windows下使用;分隔。例如定义了以下NODE_PATH环境变量：")]),e._v(" "),a("p",[a("code",[e._v("NODE_PATH=/home/user/lib:/home/lib")])]),e._v(" "),a("p",[e._v("当使用require('foo/bar')的方式加载模块时，则NodeJS依次尝试以下路径。")]),e._v(" "),a("p",[e._v("/home/user/lib/foo/bar\n/home/lib/foo/bar")])])]),e._v(" "),a("h2",{attrs:{id:"node怎么用axios"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#node怎么用axios"}},[e._v("#")]),e._v(" node怎么用axios")]),e._v(" "),a("h2",{attrs:{id:"node怎么起一个服务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#node怎么起一个服务"}},[e._v("#")]),e._v(" node怎么起一个服务")]),e._v(" "),a("h2",{attrs:{id:"pm2（进程管理）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pm2（进程管理）"}},[e._v("#")]),e._v(" pm2（进程管理）")])])}),[],!1,null,null,null);s.default=t.exports}}]);