(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{279:function(t,s,a){"use strict";a.r(s);var n=a(9),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"ajax"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ajax"}},[t._v("#")]),t._v(" AJAX")]),t._v(" "),a("p",[t._v("AJAX 这个词第一次正式提出，它是 Asynchronous JavaScript and XML 的缩写")]),t._v(" "),a("p",[t._v("指的是通过 JavaScript 的异步通信，从服务器获取 XML 文档从中提取数据，再更新当前网页的对应部分，而不用刷新整个网页。")]),t._v(" "),a("p",[t._v("后来，AJAX 这个词就成为 JavaScript 脚本发起 HTTP 通信的代名词，")]),t._v(" "),a("p",[t._v("也就是说，只要用脚本发起通信，就可以叫做 AJAX 通信")]),t._v(" "),a("p",[t._v("AJAX 这个名字已经成了一个通用名词，字面含义已经消失了。")]),t._v(" "),a("p",[t._v("XMLHttpRequest 是 AJAX 的基础。")]),t._v(" "),a("blockquote",[a("p",[t._v("与jQuery封装的ajax作区别")])]),t._v(" "),a("h2",{attrs:{id:"axios-与-ajax"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#axios-与-ajax"}},[t._v("#")]),t._v(" axios 与 AJAX")]),t._v(" "),a("p",[t._v("axios 是一个基于Promise 用于浏览器和 nodejs 的 HTTP 库，本质上也是对原生XHR的封装，只不过它是Promise的实现版本，符合最新的ES规范。")]),t._v(" "),a("p",[t._v("它本身具有以下特征：")]),t._v(" "),a("ol",[a("li",[t._v("从浏览器中创建 XMLHttpRequest")]),t._v(" "),a("li",[t._v("支持 Promise API")]),t._v(" "),a("li",[t._v("客户端支持防止CSRF")]),t._v(" "),a("li",[t._v("提供了一些并发请求的接口（重要，方便了很多的操作）")]),t._v(" "),a("li",[t._v("从 node.js 创建 http 请求")]),t._v(" "),a("li",[t._v("拦截请求和响应")]),t._v(" "),a("li",[t._v("转换请求和响应数据")]),t._v(" "),a("li",[t._v("取消请求")]),t._v(" "),a("li",[t._v("自动转换JSON数据")])]),t._v(" "),a("h2",{attrs:{id:"fetch-与-ajax"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fetch-与-ajax"}},[t._v("#")]),t._v(" Fetch 与 AJAX")]),t._v(" "),a("p",[t._v("Fetch的特点：")]),t._v(" "),a("ul",[a("li",[t._v("语法简洁，更加语义化")]),t._v(" "),a("li",[t._v("基于标准 Promise 实现，支持 async/await")]),t._v(" "),a("li",[t._v("脱离了XHR，是ES规范里新的实现方式")]),t._v(" "),a("li",[t._v("更加底层，提供的API丰富（request, response）")]),t._v(" "),a("li",[t._v("Fetch不支持abort，不支持超时控制，使用setTimeout及Promise.reject的实现的超时控制并不能阻止请求过程继续在后台运行，造成了量的浪费")]),t._v(" "),a("li",[t._v("Fetch没有办法原生监测请求的进度，而XHR可以。")])]),t._v(" "),a("h2",{attrs:{id:"axios"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#axios"}},[t._v("#")]),t._v(" axios")]),t._v(" "),a("p",[t._v("axios 是一个基于Promise 用于浏览器和 nodejs 的 HTTP 库，本质上也是对原生XHR的封装，只不过它是Promise的实现版本，符合最新的ES规范")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/axios.jpg",alt:"流程"}})]),t._v(" "),a("p",[a("a",{attrs:{href:"http://www.axios-js.com/zh-cn/docs/",target:"_blank",rel:"noopener noreferrer"}},[t._v("详细用法"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"所有请求中增加一个字段，axios怎么用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#所有请求中增加一个字段，axios怎么用"}},[t._v("#")]),t._v(" 所有请求中增加一个字段，axios怎么用")]),t._v(" "),a("p",[t._v("使用拦截器,config.headers设置即可")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" loading "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 请求拦截")]),t._v("\naxios"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("interceptors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("request"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("use")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("config")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    loading "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Loading"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("service")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      text"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"正在加载中......"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      fullscreen"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这个token是随便编的")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" token "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sdsklssdfkdlsfkkskjfskfj"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 添加自定义token字段，mytoken")]),t._v("\n    config"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("headers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("myToken "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" token"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 添加其他自定义字段，otherParams")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" otherParams "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sdfsf44545456456"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    config"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("headers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("otherParams "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" otherParams"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" config"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("error")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Promise"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"如何取消"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何取消"}},[t._v("#")]),t._v(" 如何取消")]),t._v(" "),a("p",[t._v("使用 cancel token 取消请求")]),t._v(" "),a("blockquote",[a("p",[t._v("axios 的 cancel token API 基于cancelable promises proposal")])]),t._v(" "),a("p",[t._v("通过传递config配置cancelToken的形式来取消的。判断有传cancelToken，在promise链式调用的dispatchRequest抛出错误，在adapter中request.abort()取消请求，使promise走向rejected，被用户捕获取消信息")]),t._v(" "),a("p",[t._v("可以使用 CancelToken.source 工厂方法创建 cancel token，像这样：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" CancelToken "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" axios"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CancelToken"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" source "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" CancelToken"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("source")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\naxios"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/user/12345'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  cancelToken"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" source"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("token\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("catch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("thrown")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("axios"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isCancel")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("thrown"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Request canceled'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" thrown"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 处理错误")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\naxios"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("post")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/user/12345'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'new name'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  cancelToken"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" source"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("token\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 取消请求（message 参数是可选的）")]),t._v("\nsource"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cancel")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Operation canceled by the user.'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("还可以通过传递一个 executor 函数到 CancelToken 的构造函数来创建 cancel token：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" CancelToken "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" axios"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CancelToken"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" cancel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\naxios"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/user/12345'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  cancelToken"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CancelToken")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("executor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("c")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// executor 函数接收一个 cancel 函数作为参数")]),t._v("\n    cancel "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// cancel the request")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cancel")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("注意: 可以使用同一个 cancel token 取消多个请求")]),t._v(" "),a("h3",{attrs:{id:"上传、下载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#上传、下载"}},[t._v("#")]),t._v(" 上传、下载⭐️")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 配置axios")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" instance "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" axios"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//服务器地址")]),t._v("\n\tbaseURL"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://127.0.0.1:3000'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("      \n   \theaders"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置为文件类型  ")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Content-Type'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'multipart/form-data'")]),t._v("       \n   \t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可上传的文件类型")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" typeArr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'txt'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'png'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'rar'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" formData "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FormData")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//上传")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("upload")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//获取文件")]),t._v("\n   \t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" file "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("files"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("   \n\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取文件类型")]),t._v("\n   \t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" type "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" file"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  \n   \t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("typeArr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("indexOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      \tconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'上传的文件类型有误'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      \t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v("\n   \t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//限制文件大小")]),t._v("\n   \t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" size "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" file"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("size                \n   \t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("size "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     \tconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'文件不能大于5M'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      \t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v("\n   \t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\t\n\n   \tformData"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("append")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'file'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" file"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" file"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   \tinstance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("post")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'upload/file'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("formData"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("res")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     \t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("code "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        \tconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'文件上传成功'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 清空 input 框")]),t._v("\n        \tformData"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("     \n     \t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n   \t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//下载")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("download")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("axios")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \tmtehod"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'post'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      \turl"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://127.0.0.1:3000/file'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n     \theaders"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        \tAccept"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'*/*'")]),t._v("\n     \t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n     \tresponseType"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'blob'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 接收数据类型为 blob类型")]),t._v("\n     \tdata"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n   \t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("res")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" 接收到的数据\n     \t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" blob "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data\n\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" 创建 a标签\n     \t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" eleLink "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n\t\t\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" 创建url对象 指向blob\n     \t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" url "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("URL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createObjectURL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("blob"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" 设置a标签的href属性\n     \teleLink"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("href "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" url\n\t\t\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" 下载的文件名 后缀名与后台约定    \n     \teleLink"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("download "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("文件名字.txt")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n\t\t\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" 将a标签添加到文档中\n     \tdocument"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("appendChild")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("eleLink"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   \n     \t\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("执行点击事件开始下载\n\t\teleLink"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("click")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("    \n     \t\n\t\t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" 释放指定的url\n\t\twindow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("URL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("revokeObjectURL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("url"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*在每次调用 createObjectURL() 方法时，都会创建一个新的 URL 对象，即使你已经用相同的对象作为参数创建过。当不再需要这些 URL 对象时，每个对象必须通过调用 URL.revokeObjectURL() 方法来释放。*/")]),t._v("\n   \t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"拦截器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#拦截器"}},[t._v("#")]),t._v(" 拦截器")]),t._v(" "),a("p",[t._v("在请求或响应被 then 或 catch 处理前拦截它们。")]),t._v(" "),a("p",[t._v("用axios.interceptors.request.use添加请求成功和失败拦截器函数，用axios.interceptors.response.use添加响应成功和失败拦截器函数。\n添加拦截器")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 添加请求拦截器")]),t._v("\naxios"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("interceptors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("request"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("use")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("config")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在发送请求之前做些什么")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" config"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 对请求错误做些什么")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Promise"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("reject")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 添加响应拦截器")]),t._v("\naxios"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("interceptors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("response"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("use")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("response")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 对响应数据做点什么")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" response"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 对响应错误做点什么")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Promise"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("reject")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("移除拦截器，可以这样：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" myInterceptor "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" axios"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("interceptors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("request"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("use")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*...*/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\naxios"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("interceptors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("request"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("eject")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("myInterceptor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原理"}},[t._v("#")]),t._v(" 原理")]),t._v(" "),a("p",[t._v("核心就是promise的链式调用。")]),t._v(" "),a("p",[t._v("在Axios.prototype.request函数组成promise链式调用时，Interceptors.protype.forEach遍历请求和响应拦截器添加到真正发送请求dispatchRequest的两端，从而做到请求前拦截和响应后拦截。拦截器也支持用Interceptors.protype.eject方法移除")]),t._v(" "),a("p",[t._v("InterceptorManager内部用数组管理\n"),a("img",{attrs:{src:"/img/690447419-5addef864b5e5_articlex.png",alt:"拦截器"}})]),t._v(" "),a("h3",{attrs:{id:"应用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#应用"}},[t._v("#")]),t._v(" 应用")]),t._v(" "),a("ul",[a("li",[t._v("执行并发请求"),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getUserAccount")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" axios"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/user/12345'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getUserPermissions")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" axios"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/user/12345/permissions'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\naxios"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("all")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getUserAccount")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getUserPermissions")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("axios"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("spread")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("acct"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" perms")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 两个请求现在都执行完成")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])]),t._v(" "),a("h3",{attrs:{id:"ajax怎么发送一个post请求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ajax怎么发送一个post请求"}},[t._v("#")]),t._v(" ajax怎么发送一个post请求")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*get请求，绑定到DOM上*/")]),t._v("\ndocument"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#btnAjax'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onclick")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 发送ajax 请求 需要 五步")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// （1）创建异步对象")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" ajaxObj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("XMLHttpRequest")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// （2）设置请求的参数。包括：请求的方法、请求的url。")]),t._v("\n    ajaxObj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'get'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'02-ajax.php'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// （3）发送请求")]),t._v("\n    ajaxObj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//（4）注册事件。 onreadystatechange事件，状态改变时就会调用。")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//如果要在数据完整请求回来的时候才调用，我们需要手动写一些判断的逻辑。")]),t._v("\n    ajaxObj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onreadystatechange")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n         "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 为了保证 数据 完整返回，我们一般会判断 两个值")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ajaxObj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("readyState "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" ajaxObj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("status "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果能够进到这个判断 说明 数据 完美的回来了,并且请求的页面是存在的")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 5.在注册的事件中 获取 返回的 内容 并修改页面的显示")]),t._v("\n            console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'数据返回成功'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 数据是保存在 异步对象的 属性中")]),t._v("\n            console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ajaxObj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("responseText"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 修改页面的显示")]),t._v("\n            document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'h1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("innerHTML "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ajaxObj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("responseText"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*post请求*/")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 异步对象")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" xhr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("XMLHttpRequest")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置属性")]),t._v("\nxhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'post'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'02.post.php'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果想要使用post提交数据,必须添加此行")]),t._v("\nxhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setRequestHeader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Content-type"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"application/x-www-form-urlencoded"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将数据通过send方法传递")]),t._v("\nxhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'name=fox&age=18'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 发送并接受返回值")]),t._v("\nxhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onreadystatechange")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这步为判断服务器是否正确响应")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("xhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("readyState "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" xhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("status "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("xhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("responseText"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"为什么-axios-既可以当函数调用，也可以当对象使用，比如axios-、axios-get"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么-axios-既可以当函数调用，也可以当对象使用，比如axios-、axios-get"}},[t._v("#")]),t._v(" 为什么 axios 既可以当函数调用，也可以当对象使用，比如axios({})、axios.get")]),t._v(" "),a("p",[t._v("答：axios本质是函数，赋值了一些别名方法，比如get、post方法，可被调用，最终调用的还是Axios.prototype.request函数。")]),t._v(" "),a("h3",{attrs:{id:"简述-axios-调用流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简述-axios-调用流程"}},[t._v("#")]),t._v(" 简述 axios 调用流程")]),t._v(" "),a("p",[t._v("答：实际是调用的Axios.prototype.request方法，最终返回的是promise链式调用，实际请求是在dispatchRequest中派发的")]),t._v(" "),a("h3",{attrs:{id:"为什么支持浏览器中发送请求也支持node发送请求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么支持浏览器中发送请求也支持node发送请求"}},[t._v("#")]),t._v(" 为什么支持浏览器中发送请求也支持node发送请求")]),t._v(" "),a("p",[t._v("axios.defaults.adapter默认配置中根据环境判断是浏览器还是node环境，使用对应的适配器。")]),t._v(" "),a("blockquote",[a("p",[t._v("适配器支持自定义")])]),t._v(" "),a("h2",{attrs:{id:"xmlhttprequest-对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#xmlhttprequest-对象"}},[t._v("#")]),t._v(" XMLHttpRequest 对象")]),t._v(" "),a("p",[t._v("XMLHttpRequest对象是 AJAX 的主要接口，用于浏览器与服务器之间的通信。")]),t._v(" "),a("p",[t._v("尽管名字里面有XML和Http，它实际上可以使用多种协议（比如file或ftp），发送任何格式的数据（包括字符串和二进制）。")]),t._v(" "),a("p",[t._v("AJAX 通常向同源网址（协议、域名、端口都相同）发出 HTTP 请求")]),t._v(" "),a("h3",{attrs:{id:"xmlhttprequest-readystate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#xmlhttprequest-readystate"}},[t._v("#")]),t._v(" XMLHttpRequest.readyState⭐️")]),t._v(" "),a("p",[t._v("XMLHttpRequest.readyState返回一个整数，表示实例对象的当前状态。该属性只读。")]),t._v(" "),a("p",[t._v("它可能返回以下值。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("0")]),t._v(" "),a("p",[a("strong",[t._v("表示 XMLHttpRequest 实例已经生成，但是实例的open()方法还没有被调用。")])])]),t._v(" "),a("li",[a("p",[t._v("1")]),t._v(" "),a("p",[a("strong",[t._v("表示open()方法已经调用，但是实例的send()方法还没有调用")])]),t._v(" "),a("p",[t._v("仍然可以使用实例的setRequestHeader()方法，设定 HTTP 请求的头信息。")])]),t._v(" "),a("li",[a("p",[t._v("2")]),t._v(" "),a("p",[a("strong",[t._v("表示实例的send()方法已经调用，并且服务器返回的头信息和状态码已经收到。")])])]),t._v(" "),a("li",[a("p",[t._v("3")]),t._v(" "),a("p",[a("strong",[t._v("表示正在接收服务器传来的数据体（body 部分）。")])]),t._v(" "),a("p",[t._v("这时，如果实例的responseType属性等于text或者空字符串，responseText属性就会包含已经收到的部分信息。")])]),t._v(" "),a("li",[a("p",[t._v("4")]),t._v(" "),a("p",[a("strong",[t._v("表示服务器返回的数据已经完全接收，或者本次接收已经失败。")])])])]),t._v(" "),a("p",[t._v("通信过程中，每当实例对象发生状态变化，它的readyState属性的值就会改变。这个值每一次变化，都会触发readyStateChange事件。")]),t._v(" "),a("h3",{attrs:{id:"xmlhttprequest-onreadystatechange"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#xmlhttprequest-onreadystatechange"}},[t._v("#")]),t._v(" XMLHttpRequest.onreadystatechange")]),t._v(" "),a("p",[t._v("XMLHttpRequest.onreadystatechange属性指向一个监听函数。")]),t._v(" "),a("p",[t._v("readystatechange事件发生时（实例的readyState属性变化），就会执行这个属性。")]),t._v(" "),a("p",[t._v("另外，如果使用实例的abort()方法，终止 XMLHttpRequest 请求，也会造成readyState属性变化，导致调用XMLHttpRequest.onreadystatechange属性。")]),t._v(" "),a("h3",{attrs:{id:"xmlhttprequest-response"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#xmlhttprequest-response"}},[t._v("#")]),t._v(" XMLHttpRequest.response")]),t._v(" "),a("p",[t._v("XMLHttpRequest.response属性表示服务器返回的数据体（即 HTTP 回应的 body 部分）。")]),t._v(" "),a("p",[t._v("它可能是任何数据类型，比如字符串、对象、二进制对象等等，具体的类型由XMLHttpRequest.responseType属性决定。该属性只读。")]),t._v(" "),a("p",[t._v("如果本次请求没有成功或者数据不完整，该属性等于null。")]),t._v(" "),a("p",[t._v("但是，如果responseType属性等于text或空字符串，在请求没有结束之前（readyState等于3的阶段），response属性包含服务器已经返回的部分数据。")]),t._v(" "),a("h3",{attrs:{id:"xmlhttprequest-responsetype"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#xmlhttprequest-responsetype"}},[t._v("#")]),t._v(" XMLHttpRequest.responseType")]),t._v(" "),a("p",[t._v("XMLHttpRequest.responseType属性是一个字符串，表示服务器返回数据的类型。")]),t._v(" "),a("p",[t._v("这个属性是可写的，可以在调用open()方法之后、调用send()方法之前，设置这个属性的值，告诉服务器返回指定类型的数据。")]),t._v(" "),a("p",[t._v("如果responseType设为空字符串，就等同于默认值text。")]),t._v(" "),a("p",[t._v("XMLHttpRequest.responseType属性可以等于以下值。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v('""（空字符串）：')]),t._v(" "),a("p",[t._v("等同于text，表示服务器返回文本数据。")])]),t._v(" "),a("li",[a("p",[t._v('"arraybuffer"：')]),t._v(" "),a("p",[t._v("ArrayBuffer 对象，表示服务器返回二进制数组。")])]),t._v(" "),a("li",[a("p",[t._v('"blob"：')]),t._v(" "),a("p",[t._v("Blob 对象，表示服务器返回二进制对象。")])]),t._v(" "),a("li",[a("p",[t._v('"document"：')]),t._v(" "),a("p",[t._v("Document 对象，表示服务器返回一个文档对象。")])]),t._v(" "),a("li",[a("p",[t._v('"json"：')]),t._v(" "),a("p",[t._v("JSON 对象。浏览器会自动对返回数据调用JSON.parse()方法。")]),t._v(" "),a("p",[t._v("从xhr.response属性（不是xhr.responseText属性）得到的不是文本，而是一个 JSON 对象。")])]),t._v(" "),a("li",[a("p",[t._v('"text"：')]),t._v(" "),a("p",[t._v("字符串。")])])]),t._v(" "),a("h3",{attrs:{id:"xmlhttprequest-responsetext"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#xmlhttprequest-responsetext"}},[t._v("#")]),t._v(" XMLHttpRequest.responseText")]),t._v(" "),a("p",[t._v("XMLHttpRequest.responseText属性返回从服务器接收到的字符串，该属性为只读。")]),t._v(" "),a("p",[t._v("只有 HTTP 请求完成接收以后，该属性才会包含完整的数据。")]),t._v(" "),a("h3",{attrs:{id:"xmlhttprequest-responsexml"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#xmlhttprequest-responsexml"}},[t._v("#")]),t._v(" XMLHttpRequest.responseXML")]),t._v(" "),a("p",[t._v("XMLHttpRequest.responseXML属性返回从服务器接收到的 HTML 或 XML 文档对象，")]),t._v(" "),a("p",[t._v("该属性为只读。如果本次请求没有成功，或者收到的数据不能被解析为 XML 或 HTML，该属性等于null。")]),t._v(" "),a("p",[t._v("该属性生效的前提是 HTTP 回应的Content-Type头信息等于text/xml或application/xml。")]),t._v(" "),a("p",[t._v("这要求在发送请求前，XMLHttpRequest.responseType属性要设为document。")]),t._v(" "),a("p",[t._v("如果 HTTP 回应的Content-Type头信息不等于text/xml和application/xml，")]),t._v(" "),a("p",[t._v("但是想从responseXML拿到数据（即把数据按照 DOM 格式解析），")]),t._v(" "),a("p",[t._v("那么需要手动调用XMLHttpRequest.overrideMimeType()方法，强制进行 XML 解析。")]),t._v(" "),a("p",[t._v("该属性得到的数据，是直接解析后的文档 DOM 树。")]),t._v(" "),a("h3",{attrs:{id:"xmlhttprequest-responseurl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#xmlhttprequest-responseurl"}},[t._v("#")]),t._v(" XMLHttpRequest.responseURL")]),t._v(" "),a("p",[t._v("XMLHttpRequest.responseURL属性是字符串，表示发送数据的服务器的网址。")]),t._v(" "),a("p",[t._v("这个属性的值与open()方法指定的请求网址不一定相同。")]),t._v(" "),a("p",[t._v("如果服务器端发生跳转，这个属性返回最后实际返回数据的网址。")]),t._v(" "),a("p",[t._v("另外，如果原始 URL 包括锚点（fragment），该属性会把锚点剥离。")]),t._v(" "),a("h3",{attrs:{id:"xmlhttprequest-status，xmlhttprequest-statustext-satr"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#xmlhttprequest-status，xmlhttprequest-statustext-satr"}},[t._v("#")]),t._v(" XMLHttpRequest.status，XMLHttpRequest.statusText:satr:")]),t._v(" "),a("p",[t._v("XMLHttpRequest.status属性返回一个整数，表示服务器回应的 HTTP 状态码。")]),t._v(" "),a("p",[t._v("一般来说，如果通信成功的话，这个状态码是200；如果服务器没有返回状态码，那么这个属性默认是200。")]),t._v(" "),a("p",[t._v("请求发出之前，该属性为0。该属性只读。")]),t._v(" "),a("p",[t._v("常见状态码：")]),t._v(" "),a("ul",[a("li",[t._v("200, OK，访问正常")]),t._v(" "),a("li",[t._v("301, Moved Permanently，永久移动")]),t._v(" "),a("li",[t._v("302, Moved temporarily，暂时移动")]),t._v(" "),a("li",[t._v("304, Not Modified，未修改")]),t._v(" "),a("li",[t._v("307, Temporary Redirect，暂时重定向")]),t._v(" "),a("li",[t._v("401, Unauthorized，未授权")]),t._v(" "),a("li",[t._v("403, Forbidden，禁止访问")]),t._v(" "),a("li",[t._v("404, Not Found，未发现指定网址")]),t._v(" "),a("li",[t._v("500, Internal Server Error，服务器发生错误")])]),t._v(" "),a("p",[t._v("基本上，只有2xx和304的状态码，表示服务器返回是正常状态。")]),t._v(" "),a("p",[t._v("XMLHttpRequest.statusText属性返回一个字符串，表示服务器发送的状态提示。")]),t._v(" "),a("p",[t._v("不同于status属性，该属性包含整个状态信息，比如“OK”和“Not Found”。")]),t._v(" "),a("p",[t._v("在请求发送之前（即调用open()方法之前），该属性的值是空字符串；")]),t._v(" "),a("p",[t._v("如果服务器没有返回状态提示，该属性的值默认为“OK”。该属性为只读属性。")]),t._v(" "),a("h3",{attrs:{id:"xmlhttprequest-timeout，xmlhttprequesteventtarget-ontimeout"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#xmlhttprequest-timeout，xmlhttprequesteventtarget-ontimeout"}},[t._v("#")]),t._v(" XMLHttpRequest.timeout，XMLHttpRequestEventTarget.ontimeout⭐️")]),t._v(" "),a("p",[t._v("XMLHttpRequest.timeout属性返回一个整数，表示多少毫秒后，如果请求仍然没有得到结果，就会自动终止。")]),t._v(" "),a("p",[t._v("如果该属性等于0，就表示没有时间限制。")]),t._v(" "),a("p",[t._v("XMLHttpRequestEventTarget.ontimeout属性用于设置一个监听函数，如果发生 timeout 事件，就会执行这个监听函数。")]),t._v(" "),a("h3",{attrs:{id:"事件监听属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事件监听属性"}},[t._v("#")]),t._v(" 事件监听属性⭐️")]),t._v(" "),a("p",[t._v("XMLHttpRequest 对象可以对以下事件指定监听函数。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("方法")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("XMLHttpRequest.onloadstart")]),t._v(" "),a("td",[t._v("loadstart 事件（HTTP 请求发出）的监听函数")])]),t._v(" "),a("tr",[a("td",[t._v("XMLHttpRequest.onprogress")]),t._v(" "),a("td",[t._v("progress事件（正在发送和加载数据）的监听函数")])]),t._v(" "),a("tr",[a("td",[t._v("XMLHttpRequest.onabort")]),t._v(" "),a("td",[t._v("abort 事件（请求中止，比如用户调用了abort()方法）的监听函数")])]),t._v(" "),a("tr",[a("td",[t._v("XMLHttpRequest.onerror")]),t._v(" "),a("td",[t._v("error 事件（请求失败）的监听函数，无法获取报错信息")])]),t._v(" "),a("tr",[a("td",[t._v("XMLHttpRequest.onload")]),t._v(" "),a("td",[t._v("load 事件（请求成功完成）的监听函数")])]),t._v(" "),a("tr",[a("td",[t._v("XMLHttpRequest.ontimeout")]),t._v(" "),a("td",[t._v("timeout 事件（用户指定的时限超过了，请求还未完成）的监听函数")])]),t._v(" "),a("tr",[a("td",[t._v("XMLHttpRequest.onloadend")]),t._v(" "),a("td",[t._v("loadend 事件（请求完成，不管成功或失败）的监听函数")])])])]),t._v(" "),a("p",[t._v("progress事件的监听函数有一个事件对象参数，该对象有三个属性：")]),t._v(" "),a("p",[t._v("loaded属性返回已经传输的数据量，total属性返回总的数据量，lengthComputable属性返回一个布尔值，表示加载的进度是否可以计算。")]),t._v(" "),a("p",[t._v("所有这些监听函数里面，只有progress事件的监听函数有参数，其他函数都没有参数。")]),t._v(" "),a("h3",{attrs:{id:"xmlhttprequest-withcredentials"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#xmlhttprequest-withcredentials"}},[t._v("#")]),t._v(" XMLHttpRequest.withCredentials⭐️")]),t._v(" "),a("p",[t._v("XMLHttpRequest.withCredentials属性是一个布尔值，表示跨域请求时，用户信息（比如 Cookie 和认证的 HTTP 头信息）是否会包含在请求之中，默认为false，")]),t._v(" "),a("p",[t._v("如果需要跨域 AJAX 请求发送 Cookie，需要withCredentials属性设为true。")]),t._v(" "),a("p",[t._v("注意，同源的请求不需要设置这个属性。")]),t._v(" "),a("p",[a("strong",[t._v("为了让这个属性生效，服务器必须显式返回Access-Control-Allow-Credentials这个头信息。")])]),t._v(" "),a("p",[t._v("withCredentials属性打开的话，跨域请求不仅会发送 Cookie，还会设置远程主机指定的 Cookie。")]),t._v(" "),a("p",[t._v("反之也成立，如果withCredentials属性没有打开，那么跨域的 AJAX 请求即使明确要求浏览器设置 Cookie，浏览器也会忽略。")]),t._v(" "),a("p",[a("strong",[t._v("脚本总是遵守同源政策，无法从document.cookie或者 HTTP 回应的头信息之中，读取跨域的 Cookie，withCredentials属性不影响这一点。")])]),t._v(" "),a("h3",{attrs:{id:"xmlhttprequest-upload"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#xmlhttprequest-upload"}},[t._v("#")]),t._v(" XMLHttpRequest.upload")]),t._v(" "),a("p",[t._v("XMLHttpRequest 不仅可以发送请求，还可以发送文件，这就是 AJAX 文件上传。")]),t._v(" "),a("p",[t._v("发送文件以后，通过XMLHttpRequest.upload属性可以得到一个对象，通过观察这个对象，可以得知上传的进展。")]),t._v(" "),a("p",[t._v("主要方法就是监听这个对象的各种事件：loadstart、loadend、load、abort、error、progress、timeout。")]),t._v(" "),a("h3",{attrs:{id:"xmlhttprequest-open"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#xmlhttprequest-open"}},[t._v("#")]),t._v(" XMLHttpRequest.open()")]),t._v(" "),a("p",[t._v("XMLHttpRequest.open()方法用于指定 HTTP 请求的参数，或者说初始化 XMLHttpRequest 实例对象。它一共可以接受五个参数。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n   string method"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n   string url"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n   optional boolean async"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n   optional string user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n   optional string password\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("ul",[a("li",[a("p",[t._v("method：")]),t._v(" "),a("p",[t._v("表示 HTTP 动词方法，比如GET、POST、PUT、DELETE、HEAD等。")])]),t._v(" "),a("li",[a("p",[t._v("url:")]),t._v(" "),a("p",[t._v("表示请求发送目标 URL。")])]),t._v(" "),a("li",[a("p",[t._v("async:")]),t._v(" "),a("p",[t._v("布尔值，表示请求是否为异步，默认为true。")]),t._v(" "),a("p",[t._v("如果设为false，则send()方法只有等到收到服务器返回了结果，才会进行下一步操作。该参数可选。")]),t._v(" "),a("p",[t._v("由于同步 AJAX 请求会造成浏览器失去响应，许多浏览器已经禁止在主线程使用，只允许 Worker 里面使用。")]),t._v(" "),a("p",[t._v("所以，这个参数轻易不应该设为false。")])]),t._v(" "),a("li",[a("p",[t._v("user：")]),t._v(" "),a("p",[t._v("表示用于认证的用户名，默认为空字符串。该参数可选。")])]),t._v(" "),a("li",[a("p",[t._v("password：")]),t._v(" "),a("p",[t._v("表示用于认证的密码，默认为空字符串。该参数可选。")])])]),t._v(" "),a("p",[t._v("注意，如果对使用过open()方法的 AJAX 请求，再次使用这个方法，等同于调用abort()，即终止请求。")]),t._v(" "),a("h3",{attrs:{id:"xmlhttprequest-send"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#xmlhttprequest-send"}},[t._v("#")]),t._v(" XMLHttpRequest.send()⭐️")]),t._v(" "),a("p",[t._v("XMLHttpRequest.send()方法用于实际发出 HTTP 请求。")]),t._v(" "),a("p",[t._v("它的参数是可选的，如果不带参数，就表示 HTTP 请求只有一个 URL，没有数据体，典型例子就是 GET 请求；")]),t._v(" "),a("p",[t._v("如果带有参数，就表示除了头信息，还带有包含具体数据的信息体，典型例子就是 POST 请求。")]),t._v(" "),a("p",[a("strong",[t._v("注意，所有 XMLHttpRequest 的监听事件，都必须在send()方法调用之前设定。")])]),t._v(" "),a("p",[t._v("send方法的参数就是发送的数据。多种格式的数据，都可以作为它的参数。")]),t._v(" "),a("h3",{attrs:{id:"xmlhttprequest-setrequestheader"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#xmlhttprequest-setrequestheader"}},[t._v("#")]),t._v(" XMLHttpRequest.setRequestHeader()")]),t._v(" "),a("p",[t._v("XMLHttpRequest.setRequestHeader()方法用于设置浏览器发送的 HTTP 请求的头信息。")]),t._v(" "),a("p",[t._v("该方法必须在open()之后、send()之前调用。")]),t._v(" "),a("p",[t._v("如果该方法多次调用，设定同一个字段，则每一次调用的值会被合并成一个单一的值发送。")]),t._v(" "),a("p",[t._v("该方法接受两个参数。第一个参数是字符串，表示头信息的字段名，第二个参数是字段值。")]),t._v(" "),a("h3",{attrs:{id:"xmlhttprequest-overridemimetype"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#xmlhttprequest-overridemimetype"}},[t._v("#")]),t._v(" XMLHttpRequest.overrideMimeType()")]),t._v(" "),a("p",[t._v("XMLHttpRequest.overrideMimeType()方法用来指定 MIME 类型，覆盖服务器返回的真正的 MIME 类型，从而让浏览器进行不一样的处理。")]),t._v(" "),a("p",[t._v("该方法必须在send()方法之前调用。")]),t._v(" "),a("p",[t._v("只有在服务器无法返回某种数据类型时，才使用overrideMimeType()方法。")]),t._v(" "),a("blockquote",[a("p",[t._v("如果希望服务器返回指定的数据类型，可以用responseType属性告诉服务器")])]),t._v(" "),a("h3",{attrs:{id:"xmlhttprequest-getresponseheader"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#xmlhttprequest-getresponseheader"}},[t._v("#")]),t._v(" XMLHttpRequest.getResponseHeader()")]),t._v(" "),a("p",[t._v("XMLHttpRequest.getResponseHeader()方法返回 HTTP 头信息指定字段的值，")]),t._v(" "),a("p",[t._v("如果还没有收到服务器回应或者指定字段不存在，返回null。该方法的参数不区分大小写。")]),t._v(" "),a("h3",{attrs:{id:"navigator-sendbeacon"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#navigator-sendbeacon"}},[t._v("#")]),t._v(" Navigator.sendBeacon()")]),t._v(" "),a("p",[t._v("用户卸载网页的时候，有时需要向服务器发一些数据。")]),t._v(" "),a("p",[t._v("这个方法还是异步发出请求，但是请求与当前页面线程脱钩，")]),t._v(" "),a("p",[t._v("作为浏览器进程的任务，因此可以保证会把数据发出去，不拖延卸载流程。")]),t._v(" "),a("p",[t._v("Navigator.sendBeacon方法接受两个参数，")]),t._v(" "),a("p",[t._v("第一个参数是目标服务器的 URL，")]),t._v(" "),a("p",[t._v("第二个参数是所要发送的数据（可选），可以是任意类型（字符串、表单对象、二进制对象等等）")]),t._v(" "),a("p",[t._v("该方法发送数据的 HTTP 方法是 POST，可以跨域，类似于表单提交数据。它不能指定回调函数。")]),t._v(" "),a("h2",{attrs:{id:"fetch-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fetch-api"}},[t._v("#")]),t._v(" Fetch API")]),t._v(" "),a("p",[t._v("Fetch API 提供了一个获取资源的接口（包括跨域请求）")]),t._v(" "),a("p",[t._v("发送请求或者获取资源，需要使用 WindowOrWorkerGlobalScope.fetch() 方法")]),t._v(" "),a("p",[t._v("fetch() 必须接受一个参数——资源的路径。无论请求成功与否，它都返回一个 Promise 对象，resolve 对应请求的 Response。")]),t._v(" "),a("p",[t._v("Fetch提可以很容易地被其他技术使用，例如 Service Workers")]),t._v(" "),a("p",[a("strong",[t._v("当接收到一个代表错误的 HTTP 状态码时，从 fetch()返回的 Promise 不会被标记为 reject")])]),t._v(" "),a("p",[a("strong",[t._v("默认情况下，fetch 不会从服务端发送或接收任何 cookies")])]),t._v(" "),a("h3",{attrs:{id:"request"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#request"}},[t._v("#")]),t._v(" Request")]),t._v(" "),a("p",[t._v("Request.Request() 用于创建一个新的 Request 对象。")]),t._v(" "),a("h4",{attrs:{id:"属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#属性"}},[t._v("#")]),t._v(" 属性")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Request.method 只读")]),t._v(" "),a("p",[t._v("包含请求的方法 (GET, POST, 等.)")])]),t._v(" "),a("li",[a("p",[t._v("Request.url 只读")]),t._v(" "),a("p",[t._v("包含这个请求的URL。")])]),t._v(" "),a("li",[a("p",[t._v("Request.headers 只读")]),t._v(" "),a("p",[t._v("包含请求相关的Headers对象。")])])]),t._v(" "),a("h4",{attrs:{id:"方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法"}},[t._v("#")]),t._v(" 方法")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Request.clone()")]),t._v(" "),a("p",[t._v("创建当前request的副本。")])])]),t._v(" "),a("p",[t._v("Request实现 Body, 因此它也有以下方法可用:")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Body.arrayBuffer()")]),t._v(" "),a("p",[t._v("返回解决一个ArrayBuffer表示的请求主体的promise.")])]),t._v(" "),a("li",[a("p",[t._v("Body.blob()")]),t._v(" "),a("p",[t._v("返回解决一个Blob表示的请求主体的promise.")])]),t._v(" "),a("li",[a("p",[t._v("Body.formData()")]),t._v(" "),a("p",[t._v("返回解决一个FormData表示的请求主体的promise.")])]),t._v(" "),a("li",[a("p",[t._v("Body.json()")]),t._v(" "),a("p",[t._v("返回解决一个JSON表示的请求主体的promise.")])]),t._v(" "),a("li",[a("p",[t._v("Body.text()")]),t._v(" "),a("p",[t._v("返回解决一个USVString(文本)表示的请求主体的promise.")])])]),t._v(" "),a("h3",{attrs:{id:"response"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("Response() 创建一个新的 Response 对象。")]),t._v(" "),a("h4",{attrs:{id:"属性-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#属性-2"}},[t._v("#")]),t._v(" 属性")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Response.headers 只读")]),t._v(" "),a("p",[t._v("包含此 Response 所关联的 Headers 对象。")])]),t._v(" "),a("li",[a("p",[t._v("Response.ok 只读")]),t._v(" "),a("p",[t._v("包含了一个布尔值，标示该 Response 成功（HTTP 状态码的范围在 200-299）。")])]),t._v(" "),a("li",[a("p",[t._v("Response.redirected 只读")]),t._v(" "),a("p",[t._v("表示该 Response 是否来自一个重定向，如果是的话，它的 URL 列表将会有多个条目。")])]),t._v(" "),a("li",[a("p",[t._v("Response.status 只读")]),t._v(" "),a("p",[t._v("包含 Response 的状态码 （例如 200 表示成功）。")])]),t._v(" "),a("li",[a("p",[t._v("Response.statusText 只读")]),t._v(" "),a("p",[t._v("包含了与该 Response 状态码一致的状态信息（例如，OK对应 200）。")])]),t._v(" "),a("li",[a("p",[t._v("Response.type 只读")]),t._v(" "),a("p",[t._v("包含 Response 的类型（例如，basic、cors）。")])]),t._v(" "),a("li",[a("p",[t._v("Response.url 只读")]),t._v(" "),a("p",[t._v("包含 Response 的URL。")])])]),t._v(" "),a("h4",{attrs:{id:"方法-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法-2"}},[t._v("#")]),t._v(" 方法")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Response.clone()")]),t._v(" "),a("p",[t._v("创建一个 Response 对象的克隆。")])]),t._v(" "),a("li",[a("p",[t._v("Response.error()")]),t._v(" "),a("p",[t._v("返回一个绑定了网络错误的新的 Response 对象。")])]),t._v(" "),a("li",[a("p",[t._v("Response.redirect()")]),t._v(" "),a("p",[t._v("用另一个 URL 创建一个新的 Response。")])])]),t._v(" "),a("p",[t._v("Response 实现了 Body 接口，所以以下方法同样可用：")]),t._v(" "),a("p",[t._v("因为 Responses 对象被设置为了 stream 的方式，所以它们只能被读取一次")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Body.arrayBuffer()")]),t._v(" "),a("p",[t._v("读取 Response 对象并且将它设置为已读（因为 Responses 对象被设置为了 stream 的方式，所以它们只能被读取一次），并返回一个被解析为 ArrayBuffer 格式的 Promise 对象。")])]),t._v(" "),a("li",[a("p",[t._v("Body.blob()")]),t._v(" "),a("p",[t._v("读取 Response 对象并且将它设置为已读，并返回一个被解析为 Blob 格式的 Promise 对象。")])]),t._v(" "),a("li",[a("p",[t._v("Body.formData()")]),t._v(" "),a("p",[t._v("读取Response 对象并且将它设置为已读，并返回一个被解析为 FormData 格式的 Promise 对象。")])]),t._v(" "),a("li",[a("p",[t._v("Body.json()")]),t._v(" "),a("p",[t._v("读取 Response 对象并且将它设置为已读（，并返回一个被解析为 JSON 格式的 Promise 对象。")])]),t._v(" "),a("li",[a("p",[t._v("Body.text()")]),t._v(" "),a("p",[t._v("读取 Response 对象并且将它设置为已读，并返回一个被解析为 USVString 格式的 Promise 对象。")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);