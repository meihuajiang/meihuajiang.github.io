(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{287:function(v,_,a){"use strict";a.r(_);var t=a(9),r=Object(t.a)({},(function(){var v=this,_=v.$createElement,a=v._self._c||_;return a("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[a("h2",{attrs:{id:"浏览器的核心"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器的核心"}},[v._v("#")]),v._v(" 浏览器的核心")]),v._v(" "),a("p",[v._v("两部分：渲染引擎和 JavaScript 解释器（又称 JavaScript 引擎）")]),v._v(" "),a("h2",{attrs:{id:"浏览器内核类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器内核类型"}},[v._v("#")]),v._v(" 浏览器内核类型")]),v._v(" "),a("ul",[a("li",[v._v("Firefox：Gecko 引擎")]),v._v(" "),a("li",[v._v("Safari：WebKit 引擎")]),v._v(" "),a("li",[v._v("Chrome：Blink 引擎")]),v._v(" "),a("li",[v._v("IE: Trident 引擎")]),v._v(" "),a("li",[v._v("Edge: EdgeHTML 引擎")])]),v._v(" "),a("blockquote",[a("p",[v._v("其他的国内的浏览器分为极速模式和兼容模式，极速是Webkit，兼容模式是Trident")])]),v._v(" "),a("h2",{attrs:{id:"浏览器多进程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器多进程"}},[v._v("#")]),v._v(" 浏览器多进程")]),v._v(" "),a("p",[v._v("浏览器是多进程后，包含了以下进程：（为了简化理解，仅列举主要进程）")]),v._v(" "),a("ul",[a("li",[a("p",[v._v("Browser进程：浏览器的主进程（负责协调、主控），只有一个。作用有")]),v._v(" "),a("ul",[a("li",[v._v("负责浏览器界面显示，与用户交互。如前进，后退等")]),v._v(" "),a("li",[v._v("负责各个页面的管理，创建和销毁其他进程")]),v._v(" "),a("li",[v._v("将Renderer进程得到的内存中的Bitmap，绘制到用户界面上")]),v._v(" "),a("li",[v._v("网络资源的管理，下载等")])])]),v._v(" "),a("li",[a("p",[v._v("第三方插件进程：每种类型的插件对应一个进程，仅当使用该插件时才创建")])]),v._v(" "),a("li",[a("p",[v._v("GPU进程：最多一个，用于3D绘制等")])]),v._v(" "),a("li",[a("p",[v._v("浏览器渲染进程（浏览器内核）（Renderer进程，内部是多线程的）：")]),v._v(" "),a("p",[v._v("默认每个Tab页面一个进程，互不影响。主要作用为页面渲染，脚本执行，事件处理等")])])]),v._v(" "),a("h3",{attrs:{id:"优点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#优点"}},[v._v("#")]),v._v(" 优点")]),v._v(" "),a("p",[v._v("相比于单进程浏览器，多进程有如下优点：")]),v._v(" "),a("ul",[a("li",[v._v("避免单个page crash影响整个浏览器")]),v._v(" "),a("li",[v._v("避免第三方插件crash影响整个浏览器")]),v._v(" "),a("li",[v._v("多进程充分利用多核优势")]),v._v(" "),a("li",[v._v("方便使用沙盒模型隔离插件等进程，提高浏览器稳定性")])]),v._v(" "),a("h2",{attrs:{id:"浏览器内核"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器内核"}},[v._v("#")]),v._v(" 浏览器内核")]),v._v(" "),a("p",[v._v("浏览器内核是多线程，在内核控制下各线程相互配合以保持同步，一个浏览器通常由以下常驻线程组成：")]),v._v(" "),a("ul",[a("li",[v._v("GUI 渲染线程")]),v._v(" "),a("li",[v._v("JavaScript 引擎线程")]),v._v(" "),a("li",[v._v("定时触发器线程")]),v._v(" "),a("li",[v._v("事件触发线程")]),v._v(" "),a("li",[v._v("异步 http 请求线程")])]),v._v(" "),a("h3",{attrs:{id:"gui-渲染线程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gui-渲染线程"}},[v._v("#")]),v._v(" GUI 渲染线程")]),v._v(" "),a("p",[v._v("主要负责页面的渲染，解析 HTML、CSS，构建 DOM 树，布局和绘制等。")]),v._v(" "),a("p",[v._v("当界面需要重绘或者由于某种操作引发回流时，将执行该线程。")]),v._v(" "),a("p",[a("strong",[v._v("该线程与 JS 引擎线程互斥，当执行 JS 引擎线程时，GUI 渲染会被挂起，当任务队列空闲时，JS 引擎才会去执行 GUI 渲染。")])]),v._v(" "),a("h3",{attrs:{id:"js-引擎线程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js-引擎线程"}},[v._v("#")]),v._v(" JS 引擎线程")]),v._v(" "),a("p",[v._v("该线程主要负责处理 JavaScript 脚本，执行代码。")]),v._v(" "),a("p",[v._v("也负责执行准备好待执行的事件（如定时器计数结束，或者异步请求成功并正确返回时）并依次进入任务队列，等待 JS 引擎线程的执行。")]),v._v(" "),a("p",[a("strong",[v._v("该线程与 GUI 渲染线程互斥，当 JS 引擎线程执行 JavaScript 脚本时间过长，将导致页面渲染的阻塞。")])]),v._v(" "),a("h3",{attrs:{id:"定时器触发线程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定时器触发线程"}},[v._v("#")]),v._v(" 定时器触发线程")]),v._v(" "),a("p",[v._v("负责执行异步定时器一类的函数的线程，如： setTimeout，setInterval。")]),v._v(" "),a("p",[v._v("主线程依次执行代码时，遇到定时器，会将定时器交给该线程处理，当计数完毕后，事件触发线程会将计数完毕后的事件加入到任务队列的尾部，等待 JS 引擎线程执行。")]),v._v(" "),a("h3",{attrs:{id:"事件触发线程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事件触发线程"}},[v._v("#")]),v._v(" 事件触发线程")]),v._v(" "),a("p",[v._v("主要负责将准备好的事件交给 JS 引擎线程执行。")]),v._v(" "),a("p",[v._v("比如 setTimeout 定时器计数结束， ajax 等异步请求成功并触发回调函数，或者用户触发点击事件时，该线程会将整装待发的事件依次加入到任务队列的队尾，等待 JS 引擎线程的执行。")]),v._v(" "),a("h3",{attrs:{id:"异步-http-请求线程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#异步-http-请求线程"}},[v._v("#")]),v._v(" 异步 http 请求线程")]),v._v(" "),a("p",[v._v("负责执行异步请求一类的函数的线程，如： Promise，axios，ajax 等。")]),v._v(" "),a("p",[v._v("主线程依次执行代码时，遇到异步请求，会将函数交给该线程处理，当监听到状态码变更，如果有回调函数，事件触发线程会将回调函数加入到任务队列的尾部，等待 JS 引擎线程执行。")]),v._v(" "),a("h2",{attrs:{id:"javascript-引擎"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript-引擎"}},[v._v("#")]),v._v(" JavaScript 引擎")]),v._v(" "),a("p",[v._v("JavaScript 引擎的主要作用是，读取网页中的 JavaScript 代码，对其处理后运行。")]),v._v(" "),a("p",[v._v("avaScript 是一种解释型语言，也就是说，它不需要编译，由解释器实时运行。")]),v._v(" "),a("p",[v._v("这样的好处是运行和修改都比较方便，刷新页面就可以重新解释；")]),v._v(" "),a("p",[v._v("缺点是每次运行都要调用解释器，系统开销较大，运行速度慢于编译型语言。")]),v._v(" "),a("p",[v._v("为了提高运行速度，目前的浏览器都将 JavaScript 进行一定程度的编译，生成类似字节码（bytecode）的中间代码，以提高运行速度。")]),v._v(" "),a("p",[v._v("现代浏览器采用“即时编译”（Just In Time compiler，缩写 JIT）")]),v._v(" "),a("p",[v._v("即字节码只在运行时编译，用到哪一行就编译哪一行，并且把编译结果缓存（inline cache）。")]),v._v(" "),a("p",[v._v("通常，一个程序被经常用到的，只是其中一小部分代码，有了缓存的编译结果，整个程序的运行速度就会显著提升。")]),v._v(" "),a("p",[v._v("字节码不能直接运行，而是运行在一个虚拟机（Virtual Machine）之上，一般也把虚拟机称为 JavaScript 引擎。")]),v._v(" "),a("p",[v._v("并非所有的 JavaScript 虚拟机运行时都有字节码，有的 JavaScript 虚拟机基于源码，即只要有可能，就通过 JIT（just in time）编译器直接把源码编译成机器码运行，省略字节码步骤。")]),v._v(" "),a("p",[v._v("这一点与其他采用虚拟机（比如 Java）的语言不尽相同。这样做的目的，是为了尽可能地优化代码、提高性能。")]),v._v(" "),a("h2",{attrs:{id:"浏览器的每个tab都是一个进程吗"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器的每个tab都是一个进程吗"}},[v._v("#")]),v._v(" 浏览器的每个tab都是一个进程吗")]),v._v(" "),a("p",[v._v("一般情况下，每打开一个浏览器标签页，会新开一个独立进程，即使两个标签页打开的是同一个页面。")]),v._v(" "),a("p",[v._v("但如果是通过一个标签页打开另一个标签页时，可能会将两个标签页共用一个进程")]),v._v(" "),a("blockquote",[a("p",[v._v("chrome site isolation策略允许相同站点的子页面处于一个进程")])]),v._v(" "),a("ul",[a("li",[a("p",[v._v('指定了 target="_blank" 的 a 标签')]),v._v(" "),a("p",[v._v("同源的页面会被分配在同一个进程中。而非同源页面会分配一个新的进程。")]),v._v(" "),a("p",[v._v("新增 rel 属性，指定 noopener 或 noreferrer，可以独立分配一个进程")])]),v._v(" "),a("li",[a("p",[v._v("window.open()")]),v._v(" "),a("p",[v._v("同源的页面会被分配在同一个进程中。而非同源页面会分配一个新的进程")])]),v._v(" "),a("li",[a("p",[v._v("iframe")]),v._v(" "),a("p",[v._v("同源的 iframe 没有新起一个任务,而非同源 iframe 页面作为一个“辅助框架”新起了一个任务，并且分配了一个独立进程。")])])])])}),[],!1,null,null,null);_.default=r.exports}}]);