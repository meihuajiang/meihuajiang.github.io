(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{336:function(t,s,a){"use strict";a.r(s);var n=a(9),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"xmlhttprequest-对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#xmlhttprequest-对象"}},[t._v("#")]),t._v(" XMLHttpRequest 对象")]),t._v(" "),a("p",[t._v("XMLHttpRequest对象是 AJAX 的主要接口，用于浏览器与服务器之间的通信。")]),t._v(" "),a("p",[t._v("尽管名字里面有XML和Http，它实际上可以使用多种协议（比如file或ftp），发送任何格式的数据（包括字符串和二进制）。")]),t._v(" "),a("p",[t._v("AJAX 通常向同源网址（协议、域名、端口都相同）发出 HTTP 请求")]),t._v(" "),a("p",[t._v("其余见axios部分")]),t._v(" "),a("h2",{attrs:{id:"readystate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#readystate"}},[t._v("#")]),t._v(" readyState")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("值")]),t._v(" "),a("th",[t._v("状态")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("0")]),t._v(" "),a("td",[t._v("UNSENT")]),t._v(" "),a("td",[t._v("代理被创建，但尚未调用 open() 方法。")])]),t._v(" "),a("tr",[a("td",[t._v("1")]),t._v(" "),a("td",[t._v("OPENED")]),t._v(" "),a("td",[t._v("open() 方法已经被调用。")])]),t._v(" "),a("tr",[a("td",[t._v("2")]),t._v(" "),a("td",[t._v("HEADERS_RECEIVED")]),t._v(" "),a("td",[t._v("send() 方法已经被调用，并且头部和状态已经可获得。")])]),t._v(" "),a("tr",[a("td",[t._v("3")]),t._v(" "),a("td",[t._v("LOADING")]),t._v(" "),a("td",[t._v("下载中,responseText 属性已经包含部分数据。")])]),t._v(" "),a("tr",[a("td",[t._v("4")]),t._v(" "),a("td",[t._v("DONE")]),t._v(" "),a("td",[t._v("下载操作已完成。")])])])]),t._v(" "),a("h2",{attrs:{id:"url获取主域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#url获取主域"}},[t._v("#")]),t._v(" url获取主域")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("正则获取")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" url "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/(http|https):\\/\\/([^/\\r\\n]+)(\\/[^\\r\\n]*)?/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nurl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("exec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://google.com/data'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["http://google.com/", "http", "google.com", "/data"]')]),t._v("\n")])])]),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://blog.csdn.net/orangleliu/article/details/8822987'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("        \n\t"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://platform.baidu.com:8080/sss/kk/ll.action'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("        \n\t"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://platform.ishangzu.com:8080/zz/dd/visit?id=1&cc=N'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//(:d+)?端口号")]),t._v("\narr"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("item")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v("item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/^https?:\\/\\/(.*?)(:\\d+)?\\/.*$/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'$1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    \nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])])]),t._v(" "),a("li",[a("p",[t._v("split分割")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" url "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://www.0-php.com/cat_2.html4'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" domain "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" url"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//以“/”进行分割")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//因为//的存在，所以1是空字符串，2才是获取到的主域名")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" domain"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tdomain "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" domain"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tdomain "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//如果url不正确就取空")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//"www.0-php.com"')]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("window.location.host;")])]),t._v(" "),a("li",[a("p",[t._v("document.domain")])])]),t._v(" "),a("h2",{attrs:{id:"超时控制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#超时控制"}},[t._v("#")]),t._v(" 超时控制⭐️")]),t._v(" "),a("p",[t._v("XMLHttpRequest.timeout属性返回一个整数，表示多少毫秒后，如果请求仍然没有得到结果，就会自动终止。")]),t._v(" "),a("p",[t._v("如果该属性等于0，就表示没有时间限制。")]),t._v(" "),a("p",[t._v("XMLHttpRequestEventTarget.ontimeout属性用于设置一个监听函数，如果发生 timeout 事件，就会执行这个监听函数。")]),t._v(" "),a("h2",{attrs:{id:"实现一个批量请求函数-multirequest-urls-maxnum-，其中-urls-是请求列表，maxnum是允许的最⼤并发数。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现一个批量请求函数-multirequest-urls-maxnum-，其中-urls-是请求列表，maxnum是允许的最⼤并发数。"}},[t._v("#")]),t._v(" 实现一个批量请求函数 multiRequest(urls, maxNum)，其中 urls 是请求列表，maxNum是允许的最⼤并发数。⭐️")]),t._v(" "),a("p",[t._v("返回一个promise 使用resolve接收最后的数据列表dataList")]),t._v(" "),a("p",[t._v("递归调用next，当请求次数大于等于maxNum停止调用，小于时才继续调用")]),t._v(" "),a("p",[t._v("使用请求列表，保存每次的请求url与对应结果")]),t._v(" "),a("p",[t._v("请求时,将请求次数加一,请求成功返回数据后,需要将请求次数减一，用于记录请求次数")]),t._v(" "),a("p",[t._v("每次调用成功后，再次调用时添加新的请求，当请求次数为0并且 urls列表为0时则表示全部请求完毕")]),t._v(" "),a("p",[t._v("将reqList 中保存的数据全部取出 并保存到dataList中 resolve(dataList)返回")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" index "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("axios")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("url")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Promise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("resolve"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("reject")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("url "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("/?username=")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("index"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("&password=")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("index"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("multiRequest")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("urls"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("maxNum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Promise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("resolve"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("reject")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" reqList "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" dataList "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" stackIndex "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("next")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("stackIndex "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" maxNum "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" urls"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" path "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" urls"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("splice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            stackIndex "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"开始了"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("axios")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("res")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                stackIndex "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"结束了"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n                reqList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("stackIndex "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" urls"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" reqList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                        dataList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reqList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dataList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 递归循环")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("stackIndex "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" maxNum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"restful设计理念（2000年提出）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#restful设计理念（2000年提出）"}},[t._v("#")]),t._v(" restful设计理念（2000年提出）")]),t._v(" "),a("p",[t._v("特点：")]),t._v(" "),a("ul",[a("li",[t._v("每一个URI代表1种资源；")]),t._v(" "),a("li",[t._v("客户端使用GET、POST、PUT、DELETE4个表示操作方式的动词对服务端资源进行操作：GET用来获取资源，POST用来新建资源（也可以用于更新资源），PUT用来更新资源，DELETE用来删除资源；")]),t._v(" "),a("li",[t._v("通过操作资源的表现形式来操作资源；")]),t._v(" "),a("li",[t._v("客户端与服务端之间的交互在请求之间是无状态的，从客户端到服务端的每个请求都必须包含理解请求所必需的信息")])]),t._v(" "),a("p",[t._v("PS：")]),t._v(" "),a("ul",[a("li",[t._v("URI不应该含有动词")]),t._v(" "),a("li",[t._v("URI不应该含有版本号，版本号可以在HTTP请求头信息的Accept字段中进行区分")])]),t._v(" "),a("h2",{attrs:{id:"文件上传"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文件上传"}},[t._v("#")]),t._v(" 文件上传")]),t._v(" "),a("p",[t._v('文件选择器input type="file"用来让用户选取文件。出于安全考虑，浏览器不允许脚本自行设置这个控件的value属性，即文件必须是用户手动选取的，不能是脚本指定的。一旦用户选好了文件，脚本就可以读取这个文件。')]),t._v(" "),a("p",[t._v("文件选择器返回一个 FileList 对象，该对象是一个类似数组的成员，每个成员都是一个 File 实例对象。File 实例对象是一个特殊的 Blob 实例，增加了name和lastModifiedDate属性。")]),t._v(" "),a("blockquote",[a("p",[t._v("Blob 对象表示一个二进制文件的数据内容,Blob具有两个实例属性size和type，分别返回数据的大小和类型。Blob具有一个实例方法slice，用来拷贝原来的数据，返回的也是一个Blob实例。")])]),t._v(" "),a("p",[t._v("File 对象有以下实例属性。")]),t._v(" "),a("ul",[a("li",[t._v("File.lastModified：最后修改时间")]),t._v(" "),a("li",[t._v("File.name：文件名或文件路径")]),t._v(" "),a("li",[t._v("File.size：文件大小（单位字节）")]),t._v(" "),a("li",[t._v("File.type：文件的 MIME 类型")])]),t._v(" "),a("p",[t._v("File 对象没有自己的实例方法，由于继承了 Blob 对象，因此可以使用 Blob 的实例方法slice()。")]),t._v(" "),a("h3",{attrs:{id:"filereader对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#filereader对象"}},[t._v("#")]),t._v(" FileReader对象")]),t._v(" "),a("p",[t._v("FileReader 对象提供四个方法，处理 Blob 对象。Blob 对象作为参数传入这些方法，然后以指定的格式返回。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("FileReader.readAsText()：")]),t._v(" "),a("p",[t._v("返回文本，需要指定文本编码，默认为 UTF-8。")])]),t._v(" "),a("li",[a("p",[t._v("FileReader.readAsArrayBuffer()：")]),t._v(" "),a("p",[t._v("返回 ArrayBuffer 对象。")])]),t._v(" "),a("li",[a("p",[t._v("FileReader.readAsDataURL()：")]),t._v(" "),a("p",[t._v("返回 Data URL。")])]),t._v(" "),a("li",[a("p",[t._v("FileReader.readAsBinaryString()：")]),t._v(" "),a("p",[t._v("返回原始的二进制字符串。")])])]),t._v(" "),a("p",[t._v("FileReader 有以下的实例属性。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("FileReader.error：")]),t._v(" "),a("p",[t._v("读取文件时产生的错误对象")])]),t._v(" "),a("li",[a("p",[t._v("FileReader.readyState：")]),t._v(" "),a("p",[t._v("整数，表示读取文件时的当前状态。一共有三种可能的状态，0表示尚未加载任何数据，1表示数据正在加载，2表示加载完成。")]),t._v(" "),a("blockquote",[a("p",[t._v("与xhr区别")])])]),t._v(" "),a("li",[a("p",[t._v("FileReader.result：")]),t._v(" "),a("p",[t._v("读取完成后的文件内容，有可能是字符串，也可能是一个 ArrayBuffer 实例。")])]),t._v(" "),a("li",[a("p",[t._v("FileReader.onabort：")]),t._v(" "),a("p",[t._v("abort事件（用户终止读取操作）的监听函数。")])]),t._v(" "),a("li",[a("p",[t._v("FileReader.onerror：")]),t._v(" "),a("p",[t._v("error事件（读取错误）的监听函数。")])]),t._v(" "),a("li",[a("p",[t._v("FileReader.onload：")]),t._v(" "),a("p",[t._v("load事件（读取操作完成）的监听函数，通常在这个函数里面使用result属性，拿到文件内容。")])]),t._v(" "),a("li",[a("p",[t._v("FileReader.onloadstart：")]),t._v(" "),a("p",[t._v("loadstart事件（读取操作开始）的监听函数。")])]),t._v(" "),a("li",[a("p",[t._v("FileReader.onloadend：")]),t._v(" "),a("p",[t._v("loadend事件（读取操作结束）的监听函数。")])]),t._v(" "),a("li",[a("p",[t._v("FileReader.onprogress：")]),t._v(" "),a("p",[t._v("progress事件（读取操作进行中）的监听函数。")])])]),t._v(" "),a("h3",{attrs:{id:"formdata对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#formdata对象"}},[t._v("#")]),t._v(" FormData对象")]),t._v(" "),a("p",[t._v("浏览器原生提供了 FormData 对象，可以通过脚本完成构造和编辑表单键值对，然后通过XMLHttpRequest.send()方法发送。")]),t._v(" "),a("p",[t._v("FormData对象可以独立于表单使用")]),t._v(" "),a("p",[t._v("FormData 首先是一个构造函数，用来生成实例。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" formdata "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FormData")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("form"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("FormData()构造函数的参数是一个表单元素，这个参数是可选的。如果省略参数，就表示一个空的表单，否则就会处理表单元素里面的键值对。")]),t._v(" "),a("p",[t._v("FormData 提供以下实例方法。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("FormData.get(key)：")]),t._v(" "),a("p",[t._v("获取指定键名对应的键值，参数为键名。如果有多个同名的键值对，则返回第一个键值对的键值。")])]),t._v(" "),a("li",[a("p",[t._v("FormData.getAll(key)：")]),t._v(" "),a("p",[t._v("返回一个数组，表示指定键名对应的所有键值。如果有多个同名的键值对，数组会包含所有的键值。")])]),t._v(" "),a("li",[a("p",[t._v("FormData.set(key, value)：")]),t._v(" "),a("p",[t._v("设置指定键名的键值，参数为键名。如果键名不存在，会添加这个键值对，否则会更新指定键名的键值。如果第二个参数是文件，还可以使用第三个参数，表示文件名。")])]),t._v(" "),a("li",[a("p",[t._v("FormData.delete(key)：")]),t._v(" "),a("p",[t._v("删除一个键值对，参数为键名。")])]),t._v(" "),a("li",[a("p",[t._v("FormData.append(key, value)：")]),t._v(" "),a("p",[t._v("添加一个键值对。如果键名重复，则会生成两个相同键名的键值对。如果第二个参数是文件，还可以使用第三个参数，表示文件名。")])]),t._v(" "),a("li",[a("p",[t._v("FormData.has(key)：")]),t._v(" "),a("p",[t._v("返回一个布尔值，表示是否具有该键名的键值对。")])]),t._v(" "),a("li",[a("p",[t._v("FormData.keys()：")]),t._v(" "),a("p",[t._v("返回一个遍历器对象，用于for...of循环遍历所有的键名。")])]),t._v(" "),a("li",[a("p",[t._v("FormData.values()：")]),t._v(" "),a("p",[t._v("返回一个遍历器对象，用于for...of循环遍历所有的键值。")])]),t._v(" "),a("li",[a("p",[t._v("FormData.entries()：")]),t._v(" "),a("p",[t._v("返回一个遍历器对象，用于for...of循环遍历所有的键值对。如果直接用for...of循环遍历 FormData 实例，默认就会调用这个方法。")])])]),t._v(" "),a("p",[t._v("一个简单的示例")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("easyUpload")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" input "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"input"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  input"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"file"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  input"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("click")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  input"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onchange")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" file "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" input"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("files"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" form "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FormData")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    form"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("append")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"file"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" file"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//第一个参数是后台读取的请求key值")]),t._v("\n    form"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("append")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fileName"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" file"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    form"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("append")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"other"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"123"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//实际业务的其他请求参数")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" xhr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("XMLHttpRequest")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" action "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://localhost:8080/upload.do"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//上传服务的接口地址")]),t._v("\n    xhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"POST"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" action"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    xhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("form"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//发送表单数据")]),t._v("\n    xhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onreadystatechange")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("xhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("readyState"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" xhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("status"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" resultObj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parse")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("xhr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("responseText"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//处理返回的数据......")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"下载文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#下载文件"}},[t._v("#")]),t._v(" 下载文件")]),t._v(" "),a("p",[t._v("AJAX 请求时，如果指定responseType属性为blob，下载下来的就是一个 Blob 对象。")]),t._v(" "),a("p",[t._v("浏览器允许使用URL.createObjectURL()方法，针对 Blob 对象生成一个临时 URL，以便于某些 API 使用。")]),t._v(" "),a("p",[t._v("这个 URL 以blob://开头，表明对应一个 Blob 对象，协议头后面是一个识别符，用来唯一对应内存里面的 Blob 对象。这一点与data://URL（URL 包含实际数据）和file://URL（本地文件系统里面的文件）都不一样。")]),t._v(" "),a("p",[t._v("浏览器处理 Blob URL 就跟普通的 URL 一样，如果 Blob 对象不存在，返回404状态码；如果跨域请求，返回403状态码。")]),t._v(" "),a("p",[a("strong",[t._v("Blob URL 只对 GET 请求有效，如果请求成功，返回200状态码。由于 Blob URL 就是普通 URL，因此可以下载。")])]),t._v(" "),a("h3",{attrs:{id:"通过表单"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通过表单"}},[t._v("#")]),t._v(" 通过表单")]),t._v(" "),a("p",[t._v("就是通过文件输入框选择本地文件，提交表单的时候，浏览器就会把这个文件发送到服务器。")]),t._v(" "),a("p",[t._v("需要将表单form元素的method属性设为POST，enctype属性设为multipart/form-data")]),t._v(" "),a("p",[t._v("enctype属性决定了 HTTP 头信息的Content-Type字段的值，")]),t._v(" "),a("p",[t._v("默认情况下这个字段的值是application/x-www-form-urlencoded，但是文件上传的时候要改成multipart/form-data。")]),t._v(" "),a("h2",{attrs:{id:"大文件传输"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#大文件传输"}},[t._v("#")]),t._v(" 大文件传输")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("断点续传")]),t._v(" "),a("p",[t._v("可以让文件并行分片上传，将一个大请求分成多个小请求来执行，这样当其中一些请求失败后，不需要重新上传整个文件，而只需要上传失败的分片就可以了")]),t._v(" "),a("p",[t._v("前端需要根据固定大小对文件进行分片，并且请求中要带上分片序号和大小。前端发送请求顺利到达后台后，服务器只需要按照请求数据中给的分片序号和每片分块大小（分片大小是固定且一样的）算出开始位置，与读取到的文件片段数据，写入文件即可。")]),t._v(" "),a("p",[t._v("如何区分分块所属那个文件的。采用前端生成了唯一uuid来做文件的标志，在每个分片请求上带上。或者采用Md5来维护分块和文件关系。")])])]),t._v(" "),a("h2",{attrs:{id:"fetch-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fetch-api"}},[t._v("#")]),t._v(" Fetch API")]),t._v(" "),a("p",[t._v("Fetch API 提供了一个获取资源的接口（包括跨域请求）")]),t._v(" "),a("p",[t._v("发送请求或者获取资源，需要使用 WindowOrWorkerGlobalScope.fetch() 方法")]),t._v(" "),a("p",[t._v("fetch() 必须接受一个参数——资源的路径。无论请求成功与否，它都返回一个 Promise 对象，resolve 对应请求的 Response。")]),t._v(" "),a("h3",{attrs:{id:"request"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#request"}},[t._v("#")]),t._v(" Request")]),t._v(" "),a("p",[t._v("Request.Request() 用于创建一个新的 Request 对象。")]),t._v(" "),a("h4",{attrs:{id:"属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#属性"}},[t._v("#")]),t._v(" 属性")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Request.method 只读")]),t._v(" "),a("p",[t._v("包含请求的方法 (GET, POST, 等.)")])]),t._v(" "),a("li",[a("p",[t._v("Request.url 只读")]),t._v(" "),a("p",[t._v("包含这个请求的URL。")])]),t._v(" "),a("li",[a("p",[t._v("Request.headers 只读")]),t._v(" "),a("p",[t._v("包含请求相关的Headers对象。")])])]),t._v(" "),a("h4",{attrs:{id:"方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法"}},[t._v("#")]),t._v(" 方法")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Request.clone()")]),t._v(" "),a("p",[t._v("创建当前request的副本。")])])]),t._v(" "),a("p",[t._v("Request实现 Body, 因此它也有以下方法可用:")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Body.arrayBuffer()")]),t._v(" "),a("p",[t._v("返回解决一个ArrayBuffer表示的请求主体的promise.")])]),t._v(" "),a("li",[a("p",[t._v("Body.blob()")]),t._v(" "),a("p",[t._v("返回解决一个Blob表示的请求主体的promise.")])]),t._v(" "),a("li",[a("p",[t._v("Body.formData()")]),t._v(" "),a("p",[t._v("返回解决一个FormData表示的请求主体的promise.")])]),t._v(" "),a("li",[a("p",[t._v("Body.json()")]),t._v(" "),a("p",[t._v("返回解决一个JSON表示的请求主体的promise.")])]),t._v(" "),a("li",[a("p",[t._v("Body.text()")]),t._v(" "),a("p",[t._v("返回解决一个USVString(文本)表示的请求主体的promise.")])])]),t._v(" "),a("h3",{attrs:{id:"response"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response"}},[t._v("#")]),t._v(" Response")]),t._v(" "),a("p",[t._v("Response() 创建一个新的 Response 对象。")]),t._v(" "),a("h4",{attrs:{id:"属性-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#属性-2"}},[t._v("#")]),t._v(" 属性")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Response.headers 只读")]),t._v(" "),a("p",[t._v("包含此 Response 所关联的 Headers 对象。")])]),t._v(" "),a("li",[a("p",[t._v("Response.ok 只读")]),t._v(" "),a("p",[t._v("包含了一个布尔值，标示该 Response 成功（HTTP 状态码的范围在 200-299）。")])]),t._v(" "),a("li",[a("p",[t._v("Response.redirected 只读")]),t._v(" "),a("p",[t._v("表示该 Response 是否来自一个重定向，如果是的话，它的 URL 列表将会有多个条目。")])]),t._v(" "),a("li",[a("p",[t._v("Response.status 只读")]),t._v(" "),a("p",[t._v("包含 Response 的状态码 （例如 200 表示成功）。")])]),t._v(" "),a("li",[a("p",[t._v("Response.statusText 只读")]),t._v(" "),a("p",[t._v("包含了与该 Response 状态码一致的状态信息（例如，OK对应 200）。")])]),t._v(" "),a("li",[a("p",[t._v("Response.type 只读")]),t._v(" "),a("p",[t._v("包含 Response 的类型（例如，basic、cors）。")])]),t._v(" "),a("li",[a("p",[t._v("Response.url 只读")]),t._v(" "),a("p",[t._v("包含 Response 的URL。")])])]),t._v(" "),a("h4",{attrs:{id:"方法-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法-2"}},[t._v("#")]),t._v(" 方法")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Response.clone()")]),t._v(" "),a("p",[t._v("创建一个 Response 对象的克隆。")])]),t._v(" "),a("li",[a("p",[t._v("Response.error()")]),t._v(" "),a("p",[t._v("返回一个绑定了网络错误的新的 Response 对象。")])]),t._v(" "),a("li",[a("p",[t._v("Response.redirect()")]),t._v(" "),a("p",[t._v("用另一个 URL 创建一个新的 Response。")])])]),t._v(" "),a("p",[t._v("Response 实现了 Body 接口，所以以下方法同样可用：")]),t._v(" "),a("p",[t._v("因为 Responses 对象被设置为了 stream 的方式，所以它们只能被读取一次")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Body.arrayBuffer()")]),t._v(" "),a("p",[t._v("读取 Response 对象并且将它设置为已读（因为 Responses 对象被设置为了 stream 的方式，所以它们只能被读取一次），并返回一个被解析为 ArrayBuffer 格式的 Promise 对象。")])]),t._v(" "),a("li",[a("p",[t._v("Body.blob()")]),t._v(" "),a("p",[t._v("读取 Response 对象并且将它设置为已读，并返回一个被解析为 Blob 格式的 Promise 对象。")])]),t._v(" "),a("li",[a("p",[t._v("Body.formData()")]),t._v(" "),a("p",[t._v("读取Response 对象并且将它设置为已读，并返回一个被解析为 FormData 格式的 Promise 对象。")])]),t._v(" "),a("li",[a("p",[t._v("Body.json()")]),t._v(" "),a("p",[t._v("读取 Response 对象并且将它设置为已读（，并返回一个被解析为 JSON 格式的 Promise 对象。")])]),t._v(" "),a("li",[a("p",[t._v("Body.text()")]),t._v(" "),a("p",[t._v("读取 Response 对象并且将它设置为已读，并返回一个被解析为 USVString 格式的 Promise 对象。")])])]),t._v(" "),a("h2",{attrs:{id:"xmlhttprequest-send-参数可以有哪些类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#xmlhttprequest-send-参数可以有哪些类型"}},[t._v("#")]),t._v(" XMLHttpRequest.send()参数可以有哪些类型")]),t._v(" "),a("p",[t._v("XMLHttpRequest.send() 方法用于发送 HTTP 请求。如果是异步请求（默认为异步请求），则此方法会在请求发送后立即返回；如果是同步请求，则此方法直到响应到达后才会返回。XMLHttpRequest.send() 方法接受一个可选的参数，其作为请求主体；如果请求方法是 GET 或者 HEAD，则应将请求主体设置为 null。")]),t._v(" "),a("ul",[a("li",[t._v("ArrayBuffer")]),t._v(" "),a("li",[t._v("ArrayBufferView")]),t._v(" "),a("li",[t._v("Blob")]),t._v(" "),a("li",[t._v("Document(发送之前被序列化)")]),t._v(" "),a("li",[t._v("DOMString（文本）")]),t._v(" "),a("li",[t._v("FormData")])]),t._v(" "),a("h2",{attrs:{id:"webworker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webworker"}},[t._v("#")]),t._v(" webworker")]),t._v(" "),a("p",[t._v("见HTML5部分")]),t._v(" "),a("h2",{attrs:{id:"service-worker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#service-worker"}},[t._v("#")]),t._v(" service worker")]),t._v(" "),a("p",[t._v("Service Worker 可以使你的应用先访问本地缓存资源，所以在离线状态时，在没有通过网络接收到更多的数据前，仍可以提供基本的功能")]),t._v(" "),a("blockquote",[a("p",[t._v("Service Workers 要求必须在 HTTPS 下才能运行。")])]),t._v(" "),a("p",[t._v("以下为使用 service workers的基本步骤：")]),t._v(" "),a("ol",[a("li",[t._v("service worker URL 通过 serviceWorkerContainer.register() 来获取和注册。")]),t._v(" "),a("li",[t._v("如果注册成功，service worker 就在 ServiceWorkerGlobalScope 环境中运行； 这是一个特殊类型的 worker 上下文运行环境，与主运行线程（执行脚本）相独立，同时也没有访问 DOM 的能力。")]),t._v(" "),a("li",[t._v("这时service worker 可以处理事件。")]),t._v(" "),a("li",[t._v("受 service worker 控制的页面打开后会尝试去安装 service worker。最先发送给 service worker 的事件是安装事件(在这个事件里可以开始进行填充 IndexDB和缓存站点资源)。这个流程同原生 APP 或者 Firefox OS APP 是一样的，即为了让所有资源可离线访问。")]),t._v(" "),a("li",[t._v("当 oninstall 事件的处理程序执行完毕后，就可以认为 service worker 安装完成了。")]),t._v(" "),a("li",[t._v("下一步是激活。当 service worker 安装完成后，会接收到一个激活事件(activate event)。 onactivate 主要用途是清理先前版本的 service worker 脚本中使用的资源。")]),t._v(" "),a("li",[t._v("这时Service Worker 就可以控制页面了，但仅是在register()成功后的才打开的页面。")])])])}),[],!1,null,null,null);s.default=e.exports}}]);