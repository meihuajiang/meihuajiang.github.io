(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{282:function(t,s,a){"use strict";a.r(s);var n=a(9),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"浏览器标准模式和怪异模式之间的区别是什么？（待更新）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器标准模式和怪异模式之间的区别是什么？（待更新）"}},[t._v("#")]),t._v(" 浏览器标准模式和怪异模式之间的区别是什么？（待更新）")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("在严格模式中 ：width是内容宽度 ，在怪异模式中 ：width则是元素的实际宽度")]),t._v(" "),a("div",{staticClass:"language-markdown extra-class"},[a("pre",{pre:!0,attrs:{class:"language-markdown"}},[a("code",[t._v("元素真正的宽度 = margin-left + border-left-width + padding-left + width + padding-right + border-right- width + margin-right;\n\n内容宽度 = width - ( padding-left + padding-right + border-left-width + border-right-width)\n")])])])]),t._v(" "),a("li",[a("p",[t._v("可以设置行内元素的高宽")]),t._v(" "),a("p",[t._v("在Standards模式下，给span等行内元素设置wdith和height都不会生效，而在quirks模式下，则会生效。")])]),t._v(" "),a("li",[a("p",[t._v("可设置百分比的高度")]),t._v(" "),a("p",[t._v("在standards模式下，一个元素的高度是由其包含的内容来决定的，如果父元素没有设置高度，子元素设置一个百分比的高度是无效的。")])]),t._v(" "),a("li",[a("p",[t._v("盒模型解释不同（对应box-sizing取值分别为content-box和border-box）")])]),t._v(" "),a("li",[a("p",[t._v("quirk模式下设置图片的padding会失效")])]),t._v(" "),a("li",[a("p",[t._v("quirk模式下Table中的字体属性不能继承上层的设置")])]),t._v(" "),a("li",[a("p",[t._v("quirk模式下white-space:pre会失效")])])]),t._v(" "),a("h2",{attrs:{id:"如何实现浏览器内多个标签页的通信"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何实现浏览器内多个标签页的通信"}},[t._v("#")]),t._v(" 如何实现浏览器内多个标签页的通信")]),t._v(" "),a("p",[t._v("实现浏览器内标签页的方法如下：")]),t._v(" "),a("h3",{attrs:{id:"_1-cookie-setinterval方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-cookie-setinterval方式"}},[t._v("#")]),t._v(" 1.cookie + setInterval方式")]),t._v(" "),a("p",[t._v("存储到cookie中，另外的页面的轮询的方式获取cookie的值，转换成json格式，方便获取。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//json字符串需要双引号")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" cookies "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'{\"'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cookie"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/=/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\":\"'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/;\\s+/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\", \"'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\"}'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ncookies "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parse")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cookies"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("总结：")]),t._v(" "),a("ul",[a("li",[t._v("cookie空间有限，浏览器在每一个域名下最多能设置30-50个cookie，容量最多为4k左右。")]),t._v(" "),a("li",[t._v("每次HHTP请求才会把当前域的cookie发送到服务器上，包括只在本地才用到的而服务器不用的，浪费带宽。")]),t._v(" "),a("li",[t._v("setInterval频率设置过大会影响浏览器的性能，过小会影响时效性。")])]),t._v(" "),a("h3",{attrs:{id:"_2-localstorage方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-localstorage方式"}},[t._v("#")]),t._v(" 2.localStorage方式")]),t._v(" "),a("p",[t._v("localStorage比cookie好的原因，在于它在setItem存东西时会自动触发整个浏览器的storage事件，除了当前页面之外，所有打开的标签窗口都会受影响。")]),t._v(" "),a("p",[t._v("总结：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("缺点：")]),t._v(" "),a("ul",[a("li",[t._v("localStorage是h5的属性，高版本的浏览器才支持，而且不同浏览器localStorage大小了限制不统一。")]),t._v(" "),a("li",[t._v("localStorage只能监听非己页面的数据变化。")])])]),t._v(" "),a("li",[a("p",[t._v("优点：")]),t._v(" "),a("ul",[a("li",[t._v("解决了cookie容量小和时效性的问题。")])])])]),t._v(" "),a("h3",{attrs:{id:"_3-websocket方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-websocket方式"}},[t._v("#")]),t._v(" 3.WebSocket方式")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("Websocket特点：")]),t._v(" "),a("ul",[a("li",[t._v("建设在 TCP 协定之上，服务器端的实现比较容易。")]),t._v(" "),a("li",[t._v("与 HTTP 协定有着良好的兼容性。默认端口也是80和443，并且握手阶段采纳 HTTP 协定，因而握手时不容易屏蔽，能通过各种 HTTP 代理服务器。")]),t._v(" "),a("li",[t._v("数据格式比拟轻量,性能开销小，通信高效。")]),t._v(" "),a("li",[t._v("能够发送文本，也能够发送二进制数据。")]),t._v(" "),a("li",[t._v("没有同源限度，客户端能够与任意服务器通信。")]),t._v(" "),a("li",[t._v("协定标识符是ws (如果加密,则为wss)，服务器网址就是URL。")])])]),t._v(" "),a("p",[t._v("send方发送消息到WebSocketServer，WebSocketServer再实时把消息发给receive方。")]),t._v(" "),a("p",[t._v("新建websocket连接后，发送方使用send事件，接收方使用onmessage事件")]),t._v(" "),a("p",[t._v("WebSocketServer使用on事件，为每个client添加message事件，收到消息后，给其他的client推送消息（send）")]),t._v(" "),a("p",[t._v("总结")]),t._v(" "),a("ul",[a("li",[t._v("缺点：\n"),a("ul",[a("li",[t._v("它需要服务端的支持才能完成任务。如果socket数据量比较大的话，会严重消耗服务器的资源。")]),t._v(" "),a("li",[t._v("必须要在服务端项目中写服务端监听程序才能支持。")])])]),t._v(" "),a("li",[t._v("优点：\n"),a("ul",[a("li",[t._v("使用简单（客户端简单），功能灵活、强大，如果部署了WebSocket服务器，可以实现很多实时的功能")])])])]),t._v(" "),a("p",[t._v("简单实例（旧）：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// server.js文件")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//获得WebSocketServer类型")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" WebSocketServer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ws'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Server"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//创建WebSocketServer对象实例，监听指定端口")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" wss "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("WebSocketServer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" port"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//创建保存所有已连接到服务器的客户端对象的数组")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" clients"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//为服务器添加connection事件监听，当有客户端连接到服务端时，立刻将客户端对象保存进数组中。")]),t._v("\nwss"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'connection'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("client")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"一个客户端连接到服务器"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果没有这个client对象，说明是第一次连接，就加入到clients中")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("clients"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("indexOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("client"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    clients"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("client"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"有"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("clients"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"个客户端在线"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//为每个client对象绑定message事件，当某个客户端发来消息时，自动触发")]),t._v("\n    client"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'message'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("msg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"收到消息:"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("msg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//遍历clients数组中每个其他客户端对象，并发送消息给其他客户端")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" c "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" clients"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v("client"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("msg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n")])])]),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- send.html文件 --\x3e")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("body")]),a("span",{pre:!0,attrs:{class:"token style-attr language-css"}},[a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("style")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('="')]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token property"}},[t._v("text-align")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" right")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("input")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("msg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" \n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("button")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("send"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("发送"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("button")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token script"}},[a("span",{pre:!0,attrs:{class:"token language-javascript"}},[t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//建立到服务端webSocket连接")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" ws "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("WebSocket")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ws://localhost:8080"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    send"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onclick")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("msg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("trim")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将消息发到服务器")]),t._v("\n        ws"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("msg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("trim")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  ")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("body")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- receive.html文件 --\x3e")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("body")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("h1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("收到消息："),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("span")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("recMsg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("span")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("h1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token script"}},[a("span",{pre:!0,attrs:{class:"token language-javascript"}},[t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//建立到服务端webSocket连接")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" ws "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("WebSocket")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ws://localhost:8080"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//当连接被打开时，注册接收消息的处理函数")]),t._v("\n    ws"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onopen")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//当有消息发过来时，就将消息放到显示元素上")]),t._v("\n      ws"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onmessage")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        recMsg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("innerHTML"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  ")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("body")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("h3",{attrs:{id:"_4-sharedworker方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-sharedworker方式"}},[t._v("#")]),t._v(" 4.SharedWorker方式")]),t._v(" "),a("p",[t._v("SharedWorker原理和WebWorker几乎是一样的，只不过SharedWorker可以跨多个页面使用。")]),t._v(" "),a("p",[t._v("SharedWorker在客户端有一个自己维护的对象worker.js，消息存储在worker.js中的data中。")]),t._v(" "),a("p",[t._v("SharedWorker接收消息不是自动的，也要用定时器实时从worker.js中获取消息。")]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("注意：")]),t._v(" "),a("p",[t._v("如果要使 SharedWorker 连接到多个不同的页面，这些页面必须是同源的（相同的协议、host 以及端口）")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("webworker")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("webworker作为浏览器的一个新特性，可以提供一个额外的线程来执行一些js代码，并且不会影响到浏览器用户界面。")])]),t._v(" "),a("li",[a("p",[t._v("普通的webworker直接使用new Worker()即可创建，这种webworker是当前页面专有的。然后还有种共享worker(SharedWorker)，这种是可以多个标签页、iframe共同使用的。")])])]),t._v(" "),a("p",[t._v("应用场景：比如页面中包含耗时较大的算法代码时，就会阻塞线程影响浏览器渲染等等。这时候就可把耗时代码，放到webworker(另一个线程)中执行。\n注意，这种多线程能力不是JavaScript语言原生具有的，而是浏览器宿主环境提供的。")])]),t._v(" "),a("p",[t._v("简单实例：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// worker.js文件")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//在所有SharedWorker共享的worker.js中，保存一个data变量，用于存储多个worker共享的数据")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" data"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"连接成功"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//必须提供一个名为onconnect的事件处理函数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//每当一个页面中new SharedWorker("worker.js")时，就会为新创建的worker绑定onconnect事件处理函数')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onconnect")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//获得当前连接上来的客户端对象")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" client "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ports"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  client"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("postMessage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//当当前对象收到消息时")]),t._v("\n  client"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onmessage")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//如果消息内容为空，说明该客户端想获取共享的数据data")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//就给当前客户端发送data数据")]),t._v("\n      client"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("postMessage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//否则如果消息内容不为空，说明该客户端想要提供新的消息保存在共享的data中，供别人获取")]),t._v("\n      data"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("然后两个脚本都通过 MessagePort 对象来访问worker，这个对象用SharedWorker.port 属性获得。")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- send.html文件 --\x3e")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("body")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("input")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("msg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("button")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("send"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("发送"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("button")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token script"}},[a("span",{pre:!0,attrs:{class:"token language-javascript"}},[t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" worker"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SharedWorker")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"worker.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    worker"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("port"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    send"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onclick")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("msg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("trim")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        worker"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("port"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("postMessage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("msg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("trim")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  ")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("body")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- receive.html文件 --\x3e")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("body")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("h1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("收到消息:"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("span")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("recMsg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("span")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("h1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token script"}},[a("span",{pre:!0,attrs:{class:"token language-javascript"}},[t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" worker"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SharedWorker")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"worker.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//3. 当worker.js中给当前客户端返回了data，会触发当前客户端的message事件。data的值，自动保存进事件对象e的data属性中")]),t._v("\n    worker"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("port"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"message"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      recMsg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("innerHTML"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//如果已经用 addEventListener 监听了 onmessage 事件，则可以使用 start() 方法手动启动端口：")]),t._v("\n    worker"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("port"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1. 接收端反复向共享的worker.js对象中发送空消息，意为想获取data的值")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setInterval")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      worker"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("port"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("postMessage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2. 只要发送消息，就触发worker.js中的onmessage，onmessage判断是空消息内容，说明客户端想获得data。于是就用postMessage()方法，将data返回给当前客户端")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  ")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("body")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("h2",{attrs:{id:"页面可见性（pagevisibility）有哪些用途"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#页面可见性（pagevisibility）有哪些用途"}},[t._v("#")]),t._v(" 页面可见性（pageVisibility）有哪些用途")]),t._v(" "),a("ul",[a("li",[t._v("通过visibilityState的值检测页面当前是否可见，")]),t._v(" "),a("li",[t._v("计算页面打开的时间")]),t._v(" "),a("li",[t._v("页面切换到后台进程时，自动暂停音乐或视频的播放（有些浏览自带功能）")])]),t._v(" "),a("h2",{attrs:{id:"输入url到页面显示发生了什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#输入url到页面显示发生了什么"}},[t._v("#")]),t._v(" 输入url到页面显示发生了什么⭐️")]),t._v(" "),a("ul",[a("li",[t._v("浏览器输入url，浏览器主进程接管")]),t._v(" "),a("li",[t._v("浏览器进程校验之后,开启网络请求线程")]),t._v(" "),a("li",[t._v("查看缓存（强缓存和协商缓存）")]),t._v(" "),a("li",[t._v("DNS 域名解析\n"),a("ul",[a("li",[t._v("浏览器的缓存")]),t._v(" "),a("li",[t._v("主机缓存")]),t._v(" "),a("li",[t._v("路由缓存")]),t._v(" "),a("li",[t._v("DNS 域名服务器迭代/递归查询")])])]),t._v(" "),a("li",[t._v("拿到 IP，建立 TCP 连接")]),t._v(" "),a("li",[t._v("异步请求线程发起HTTP请求")]),t._v(" "),a("li",[t._v("服务器收到请求后进行相应处理再返回数据")]),t._v(" "),a("li",[t._v("拿到服务端返回的数据后，通知浏览器进程拿到资源了，和渲染进程建立管道")]),t._v(" "),a("li",[t._v("DOM树\n"),a("ul",[a("li",[t._v("StyleSheet")]),t._v(" "),a("li",[t._v("布局树")]),t._v(" "),a("li",[t._v("图层树")]),t._v(" "),a("li",[t._v("指令绘制")]),t._v(" "),a("li",[t._v("栅格化")]),t._v(" "),a("li",[t._v("合成，GPU进程可能会优化")])])]),t._v(" "),a("li",[t._v("页面显示")])]),t._v(" "),a("h3",{attrs:{id:"渲染流程，精确到标签"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#渲染流程，精确到标签"}},[t._v("#")]),t._v(" 渲染流程，精确到标签")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/1373095523-5a658fc12f1fd.png",alt:"渲染流程"}})]),t._v(" "),a("p",[t._v("得到 render tree 后，开始渲染")]),t._v(" "),a("p",[t._v("CSS的可视化格式模型就是规定了浏览器在页面中如何处理文档树")]),t._v(" "),a("blockquote",[a("p",[t._v("CSS中规定每一个元素都有自己的盒子模型（相当于规定了这个元素如何显示）")])]),t._v(" "),a("p",[t._v("可视化格式模型则是把这些盒子按照规则摆放到页面上，也就是如何布局")]),t._v(" "),a("blockquote",[a("p",[t._v("换句话说，盒子模型规定了怎么在页面里摆放盒子，盒子的相互作用等等")])]),t._v(" "),a("p",[t._v("PS：渲染树只包含可见的节点")]),t._v(" "),a("h3",{attrs:{id:"渲染图层"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#渲染图层"}},[t._v("#")]),t._v(" 渲染图层")]),t._v(" "),a("p",[t._v("浏览器渲染的图层一般包含两大类：普通图层以及复合图层")]),t._v(" "),a("p",[t._v("可以通过硬件加速的方式，声明一个新的复合图层，它会单独分配资源，当然也会脱离普通文档流，这样一来，不管这个复合图层中怎么变化，也不会影响默认复合层里的回流重绘")]),t._v(" "),a("p",[t._v("可以简单理解下：GPU中，各个复合图层是单独绘制的，所以互不影响，这也是为什么某些场景硬件加速效果很好的原因。")]),t._v(" "),a("h3",{attrs:{id:"浏览器绘制-dom"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器绘制-dom"}},[t._v("#")]),t._v(" 浏览器绘制 DOM")]),t._v(" "),a("ol",[a("li",[t._v("获取 DOM 并将其分割为多个层（layer）")]),t._v(" "),a("li",[t._v("将每个层独立地绘制进位图（bitmap）中")]),t._v(" "),a("li",[t._v("将层作为纹理（texture）上传至 GPU")]),t._v(" "),a("li",[t._v("复合（composite）多个层来生成最终的屏幕图像")])]),t._v(" "),a("h4",{attrs:{id:"开启硬件加速"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开启硬件加速"}},[t._v("#")]),t._v(" 开启硬件加速")]),t._v(" "),a("p",[t._v("将该元素变成一个复合图层，就是使用硬件加速技术")]),t._v(" "),a("ul",[a("li",[t._v("最常用的方式：translate3d、translateZ")]),t._v(" "),a("li",[t._v("opacity属性、过渡动画（需要动画执行的过程中才会创建合成层，动画没有开始或结束后元素还会回到之前的状态）")]),t._v(" "),a("li",[t._v("will-chang属性（这个比较偏僻），一般配合opacity与translate使用（而且经测试，除了上述可以引发硬件加速的属性外，其它属性并不会变成复合层），")])]),t._v(" "),a("h4",{attrs:{id:"复合图层的作用？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#复合图层的作用？"}},[t._v("#")]),t._v(" 复合图层的作用？")]),t._v(" "),a("p",[t._v("一般一个元素开启硬件加速后会变成复合图层，可以独立于普通文档流中，改动后可以避免整个页面重绘，提升性能")]),t._v(" "),a("p",[t._v("但是尽量不要大量使用复合图层，否则由于资源消耗过度，页面反而会变的更卡")]),t._v(" "),a("h4",{attrs:{id:"absolute和硬件加速的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#absolute和硬件加速的区别"}},[t._v("#")]),t._v(" absolute和硬件加速的区别")]),t._v(" "),a("p",[t._v("absolute虽然可以脱离普通文档流，但是无法脱离默认复合层。")]),t._v(" "),a("blockquote",[a("p",[t._v("absolute中信息改变时不会改变普通文档流中render树")])]),t._v(" "),a("p",[t._v("但是，浏览器最终绘制时，是整个复合层绘制的，所以absolute中信息的改变，仍然会影响整个复合层的绘制。\n（浏览器会重绘它，如果复合层中内容多，absolute带来的绘制信息变化过大，资源消耗是非常严重的）")]),t._v(" "),a("p",[t._v("而硬件加速直接就是在另一个复合层另起炉灶l，所以它的信息改变不会影响默认复合层")]),t._v(" "),a("blockquote",[a("p",[t._v("会影响属于自己的复合层")])]),t._v(" "),a("p",[t._v("仅仅是引发最后的合成（输出视图）")]),t._v(" "),a("h3",{attrs:{id:"dom树、render树、css加载时遇到js代码怎么办"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dom树、render树、css加载时遇到js代码怎么办"}},[t._v("#")]),t._v(" DOM树、render树、CSS加载时遇到JS代码怎么办")]),t._v(" "),a("p",[t._v("css是由单独的下载线程异步下载的。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("css加载不会阻塞DOM树解析（异步加载时DOM照常构建）")])]),t._v(" "),a("li",[a("p",[t._v("但会阻塞render树渲染（渲染时需等css加载完毕，因为render树需要css信息）")]),t._v(" "),a("blockquote",[a("p",[t._v("因为加载css的时候，可能会修改DOM节点的样式，如果css加载不阻塞render树渲染的话，那么当css加载完之后，render树可能又得重新重绘或者回流")])]),t._v(" "),a("blockquote",[a("p",[t._v("media query声明的CSS是不会阻塞渲染的(但是还没有验证过)")])])])]),t._v(" "),a("p",[t._v("JS执行会阻塞DOM树的解析和渲染")]),t._v(" "),a("p",[a("strong",[t._v("css加载不会阻塞JS的加载，但是会阻塞后面JS语句的执行")])]),t._v(" "),a("h3",{attrs:{id:"css-加载顺序和解析顺序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css-加载顺序和解析顺序"}},[t._v("#")]),t._v(" css 加载顺序和解析顺序")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("head")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("link")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("href")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("main1.css"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("rel")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("stylesheet"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("link")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("href")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("main2.css"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("rel")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("stylesheet"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("head")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[t._v("main1.css 和 main2.css 同时加载，优先加载完的优先进行解析，")]),t._v(" "),a("p",[t._v("如果此时 main1.css 和 main2.css 有相同的选择器规则，main2.css 将会覆盖 main1.css 中的规则")]),t._v(" "),a("h3",{attrs:{id:"如何避免js阻塞渲染"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何避免js阻塞渲染"}},[t._v("#")]),t._v(" 如何避免JS阻塞渲染?")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("defer 属性")]),t._v(" "),a("p",[t._v("为了解决脚本文件下载阻塞网页渲染的问题，一个方法是对script元素加入defer属性。")]),t._v(" "),a("p",[t._v("它的作用是延迟脚本的执行，等到 DOM 加载生成后，再执行脚本。")]),t._v(" "),a("p",[t._v("defer属性的运行流程如下。")]),t._v(" "),a("ol",[a("li",[t._v("浏览器开始解析 HTML 网页。")]),t._v(" "),a("li",[t._v("解析过程中，发现带有defer属性的script元素。")]),t._v(" "),a("li",[a("strong",[t._v("浏览器继续往下解析 HTML 网页，同时并行下载script元素加载的外部脚本。")])]),t._v(" "),a("li",[a("strong",[t._v("浏览器完成解析 HTML 网页，此时再回过头执行已经下载完成的脚本。")])])]),t._v(" "),a("p",[t._v("有了defer属性，浏览器下载脚本文件的时候，不会阻塞页面渲染。")]),t._v(" "),a("p",[t._v("下载的脚本文件在DOMContentLoaded事件触发前执行（即刚刚读取完</html>标签）")]),t._v(" "),a("p",[a("strong",[t._v("保证执行顺序就是它们在页面上出现的顺序")]),t._v("。")]),t._v(" "),a("p",[a("strong",[t._v("对于内置而不是加载外部脚本的script标签，以及动态生成的script标签，defer属性不起作用。")])]),t._v(" "),a("p",[t._v("另外，使用defer加载的外部脚本不应该使用document.write方法。")])]),t._v(" "),a("li",[a("p",[t._v("async 属性")]),t._v(" "),a("p",[t._v("解决“阻塞效应”的另一个方法是对script元素加入async属性。")]),t._v(" "),a("p",[t._v("async属性的作用是，使用另一个进程下载脚本，下载时不会阻塞渲染。")]),t._v(" "),a("p",[t._v("解析过程：")]),t._v(" "),a("ol",[a("li",[t._v("浏览器开始解析 HTML 网页。")]),t._v(" "),a("li",[t._v("解析过程中，发现带有async属性的script标签。")]),t._v(" "),a("li",[t._v("浏览器继续往下解析 HTML 网页，同时并行下载script标签中的外部脚本。")]),t._v(" "),a("li",[a("strong",[t._v("脚本下载完成，浏览器暂停解析 HTML 网页，开始执行下载的脚本。")])]),t._v(" "),a("li",[a("strong",[t._v("脚本执行完毕，浏览器恢复解析 HTML 网页。")])])]),t._v(" "),a("p",[t._v("async属性可以保证脚本下载的同时，浏览器继续渲染。")]),t._v(" "),a("p",[a("strong",[t._v("一旦采用这个属性，就无法保证脚本的执行顺序。哪个脚本先下载结束，就先执行那个脚本。")])]),t._v(" "),a("p",[t._v("使用async属性的脚本文件里面的代码，不应该使用document.write方法。")])])]),t._v(" "),a("p",[t._v("区别：")]),t._v(" "),a("ul",[a("li",[t._v("defer，脚本下载完成，浏览器继续解析 HTML 网页直至完成，再回过头执行已经下载完成的脚本，按页面顺序执行。")]),t._v(" "),a("li",[t._v("async，脚本下载完成，浏览器暂停解析 HTML 网页，开始执行下载的脚本，先下载完先执行。")])]),t._v(" "),a("h3",{attrs:{id:"img加载会影响渲染吗"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#img加载会影响渲染吗"}},[t._v("#")]),t._v(" img加载会影响渲染吗⭐️")]),t._v(" "),a("p",[t._v("遇到图片等资源时，直接就是异步下载，不会阻塞解析，下载完毕后直接用图片替换原有src的地方")]),t._v(" "),a("h2",{attrs:{id:"回流和重绘"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#回流和重绘"}},[t._v("#")]),t._v(" 回流和重绘⭐️")]),t._v(" "),a("p",[t._v("渲染树转换为网页布局，称为“布局流”（flow）；")]),t._v(" "),a("p",[t._v("布局显示到页面的这个过程，称为“绘制”（paint）。")]),t._v(" "),a("p",[t._v("它们都具有阻塞效应，并且会耗费很多时间和计算资源。")]),t._v(" "),a("p",[t._v("回流和重绘并不一定一起发生，回流必然导致重绘，重绘不一定需要回流。")]),t._v(" "),a("blockquote",[a("p",[t._v("比如改变元素颜色，只会导致重绘，而不会导致重流；改变元素的布局，则会导致重绘和重流。")])]),t._v(" "),a("p",[t._v("大多数情况下，浏览器会智能判断，将重流和重绘只限制到相关的子树上面，最小化所耗费的代价，而不会全局重新生成网页。")]),t._v(" "),a("p",[a("strong",[t._v("现代浏览器大多都是通过队列机制来批量更新布局，浏览器会把修改操作放在队列中，至少一个浏览器刷新（即16.6ms）才会清空队列")]),t._v("，但是当获取布局信息的时候，队列中可能有会影响这些属性或方法返回值的操作，即使没有，浏览器也会强制清空队列，触发回流与重绘来确保返回正确的值。")]),t._v(" "),a("h3",{attrs:{id:"触发回流"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#触发回流"}},[t._v("#")]),t._v(" 触发回流")]),t._v(" "),a("ul",[a("li",[t._v("页面第一次渲染")]),t._v(" "),a("li",[t._v("DOM树发生变化（添加DOM节点、添加内容）")]),t._v(" "),a("li",[t._v("元素位置或大小变化")]),t._v(" "),a("li",[t._v("浏览器窗口大小变化")]),t._v(" "),a("li",[t._v("获取属性（这个影响不在于改变了页面，而是破坏了浏览器的批处理回流优化）")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("获取属性触发回流")]),t._v(" "),a("ul",[a("li",[t._v("offsetTop、offsetLeft、offsetWidth、offsetHeight")]),t._v(" "),a("li",[t._v("scrollTop、scrollLeft、scrollWidth、scrollHeight")]),t._v(" "),a("li",[t._v("clientTop、clientLeft、clientWidth、clientHeight")]),t._v(" "),a("li",[t._v("getComputedStyle()")]),t._v(" "),a("li",[t._v("getBoundingClientRect()")]),t._v(" "),a("li",[t._v("scrollIntoView()")])])]),t._v(" "),a("p",[t._v("由于浏览器使用流式布局，对Render Tree的计算通常只需要遍历一次就可以完成，但table及其内部元素除外，他们可能需要多次计算")]),t._v(" "),a("h3",{attrs:{id:"重绘的定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重绘的定义"}},[t._v("#")]),t._v(" 重绘的定义")]),t._v(" "),a("p",[t._v("由于节点的几何属性发生改变或由于样式发生改变但是都不会影响到布局的，称为重绘")]),t._v(" "),a("p",[t._v("引起重绘：")]),t._v(" "),a("ul",[a("li",[t._v("color")]),t._v(" "),a("li",[t._v("border-style")]),t._v(" "),a("li",[t._v("visibility")]),t._v(" "),a("li",[t._v("background、background-image、background-position、background-repeat、background-size")]),t._v(" "),a("li",[t._v("text-decoration")]),t._v(" "),a("li",[t._v("outline-color、outline-style、outline-width")]),t._v(" "),a("li",[t._v("border-radius")]),t._v(" "),a("li",[t._v("box-shadow")])]),t._v(" "),a("h3",{attrs:{id:"回流的定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#回流的定义"}},[t._v("#")]),t._v(" 回流的定义")]),t._v(" "),a("p",[t._v("布局或者几何属性需要改变就称为回流")]),t._v(" "),a("p",[t._v("回流这一阶段主要是计算节点的位置和几何信息，那么当页面布局和几何信息发生变化的时候，就需要回流")]),t._v(" "),a("p",[t._v("一个元素的回流可能会导致了其所有子元素以及DOM中紧随其后的节点、祖先节点元素的随后的回流。")]),t._v(" "),a("h3",{attrs:{id:"如何减少回流和重绘"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何减少回流和重绘"}},[t._v("#")]),t._v(" 如何减少回流和重绘⭐️")]),t._v(" "),a("p",[t._v("从 CSS 和 JS 的角度出发")]),t._v(" "),a("h4",{attrs:{id:"css"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css"}},[t._v("#")]),t._v(" CSS")]),t._v(" "),a("ul",[a("li",[t._v("使用 transform 替代 top")]),t._v(" "),a("li",[t._v("使用 visibility 替换 display: none ，因为前者只会引起重绘，后者会引发回流（改变了布局")]),t._v(" "),a("li",[t._v("避免使用table布局，可能很小的一个小改动会造成整个 table 的重新布局。")]),t._v(" "),a("li",[t._v("尽可能在DOM树的最末端改变class，回流是不可避免的，但可以减少其影响。尽可能在DOM树的最末端改变class，可以限制了回流的范围，使其影响尽可能少的节点。")]),t._v(" "),a("li",[t._v("将动画效果应用到position属性为absolute或fixed的元素上，避免影响其他元素的布局，这样只是一个重绘，而不是回流，同时，控制动画速度可以选择 requestAnimationFrame")]),t._v(" "),a("li",[t._v("将频繁重绘或者回流的节点设置为图层，图层能够阻止该节点的渲染行为影响别的节点，例如will-change、video、iframe等标签，浏览器会自动将该节点变为图层。")]),t._v(" "),a("li",[t._v("CSS3 硬件加速（GPU加速），使用css3硬件加速，可以让transform、opacity、filters这些动画不会引起回流重绘 。但是对于动画的其它属性，比如background-color这些，还是会引起回流重绘的，虽然还是提升了这些动画的性能。")]),t._v(" "),a("li",[t._v("避免使用CSS表达式，可能会引发回流。")])]),t._v(" "),a("h4",{attrs:{id:"js"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js"}},[t._v("#")]),t._v(" JS")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("避免频繁操作样式，最好一次性重写style属性，或者将样式列表定义为class并一次性更改class属性。")]),t._v(" "),a("p",[t._v("使用cssText")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" el "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cssText "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'border-left: 1px; border-right: 2px; padding: 5px;'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("修改CSS的class")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" el "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("className "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("' active'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("避免频繁操作DOM")]),t._v(" "),a("p",[t._v("当我们需要对DOM对一系列修改的时候，可以通过以下步骤减少回流重绘次数：")]),t._v(" "),a("ol",[a("li",[t._v("使元素脱离文档流")]),t._v(" "),a("li",[t._v("对其进行多次修改")]),t._v(" "),a("li",[t._v("将元素添加回文档中。")])]),t._v(" "),a("p",[t._v("该过程的第一步和第三步可能会引起回流，但是经过第一步之后，对DOM的所有修改都不会引起回流重绘，因为它已经不在渲染树了。")]),t._v(" "),a("p",[t._v("有三种方式可以让DOM脱离文档流：")]),t._v(" "),a("ul",[a("li",[t._v("隐藏元素，应用修改，重新显示")]),t._v(" "),a("li",[t._v("使用文档片段(document fragment)在当前DOM之外构建一个子树，再把它拷贝回文档。")]),t._v(" "),a("li",[t._v("将原始元素拷贝到一个脱离文档的节点中，修改节点后，再替换原始的元素。")])]),t._v(" "),a("blockquote",[a("p",[t._v("其实现代浏览器有做相关的优化")])])]),t._v(" "),a("li",[a("p",[t._v("避免频繁读取会引发回流/重绘的属性，如果确实需要多次使用，就用一个变量缓存起来。")])]),t._v(" "),a("li",[a("p",[t._v("对具有复杂动画的元素使用绝对定位，使它脱离文档流，否则会引起父元素及后续元素频繁回流。")])])]),t._v(" "),a("h2",{attrs:{id:"浏览器缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器缓存"}},[t._v("#")]),t._v(" 浏览器缓存⭐️")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/3174701-8e74b69ad9376710.webp.jpg",alt:"浏览器缓存"}})]),t._v(" "),a("h3",{attrs:{id:"service-worker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#service-worker"}},[t._v("#")]),t._v(" Service Worker")]),t._v(" "),a("p",[t._v("Service Worker 是运行在浏览器背后的独立线程，一般可以用来实现缓存功能。使用 Service Worker的话，传输协议必须为 HTTPS。因为 Service Worker 中涉及到请求拦截，所以必须使用 HTTPS 协议来保障安全。Service Worker 的缓存与浏览器其他内建的缓存机制不同，它可以让我们自由控制缓存哪些文件、如何匹配缓存、如何读取缓存，并且缓存是持续性的。")]),t._v(" "),a("p",[t._v("Service Worker 实现缓存功能一般分为三个步骤：首先需要先注册 Service Worker，然后监听到 install 事件以后就可以缓存需要的文件，那么在下次用户访问的时候就可以通过拦截请求的方式查询是否存在缓存，存在缓存的话就可以直接读取缓存文件，否则就去请求数据。")]),t._v(" "),a("p",[t._v("当 Service Worker 没有命中缓存的时候，我们需要去调用 fetch 函数获取数据。也就是说，如果我们没有在 Service Worker 命中缓存的话，会根据缓存查找优先级去查找数据。但是不管我们是从 Memory Cache 中还是从网络请求中获取的数据，浏览器都会显示我们是从 Service Worker 中获取的内容。")]),t._v(" "),a("h3",{attrs:{id:"memory-cache"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#memory-cache"}},[t._v("#")]),t._v(" Memory Cache")]),t._v(" "),a("p",[t._v("Memory Cache 也就是内存中的缓存，主要包含的是当前中页面中已经抓取到的资源,例如页面上已经下载的样式、脚本、图片等。读取内存中的数据肯定比磁盘快,内存缓存虽然读取高效，可是缓存持续性很短，会随着进程的释放而释放。 一旦我们关闭 Tab 页面，内存中的缓存也就被释放了。")]),t._v(" "),a("h3",{attrs:{id:"disk-cache"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#disk-cache"}},[t._v("#")]),t._v(" Disk Cache")]),t._v(" "),a("p",[t._v("Disk Cache 也就是存储在硬盘中的缓存，读取速度慢点，但是什么都能存储到磁盘中，比之 Memory Cache 胜在容量和存储时效性上。")]),t._v(" "),a("p",[t._v("在所有浏览器缓存中，Disk Cache 覆盖面基本是最大的。它会根据 HTTP Herder 中的字段判断哪些资源需要缓存，哪些资源可以不请求直接使用，哪些资源已经过期需要重新请求。并且即使在跨站点的情况下，相同地址的资源一旦被硬盘缓存下来，就不会再次去请求数据。绝大部分的缓存都来自 Disk Cache")]),t._v(" "),a("h3",{attrs:{id:"push-cache"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#push-cache"}},[t._v("#")]),t._v(" Push Cache")]),t._v(" "),a("p",[t._v("Push Cache（推送缓存）是 HTTP/2 中的内容，当以上三种缓存都没有命中时，它才会被使用。它只在会话（Session）中存在，一旦会话结束就被释放，并且缓存时间也很短暂")]),t._v(" "),a("p",[t._v("通常浏览器缓存策略分为两种：强缓存和协商缓存，并且缓存策略都是通过设置 HTTP Header 来实现的。")]),t._v(" "),a("h3",{attrs:{id:"浏览器中什么时候缓存到磁盘"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器中什么时候缓存到磁盘"}},[t._v("#")]),t._v(" 浏览器中什么时候缓存到磁盘")]),t._v(" "),a("ul",[a("li",[t._v("对于大文件来说，大概率是不存储在内存中的，反之优先")]),t._v(" "),a("li",[t._v("经常访问的内容会在内存中")])]),t._v(" "),a("h2",{attrs:{id:"web-push原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#web-push原理"}},[t._v("#")]),t._v(" web-push原理")]),t._v(" "),a("p",[t._v("推送通知一般指由浏览器实现的消息推送，换个说法，就是用户在打开浏览器时，不需要进入特定的网站，就能收到该网站推送而来的消息")]),t._v(" "),a("ol",[a("li",[t._v("客户端完成请求订阅一个用户的逻辑")]),t._v(" "),a("li",[t._v("服务端调用遵从web push协议的接口，传送消息推送（push message）到推送服务器（该服务器由浏览器决定，开发者所能做的只有控制发送的数据）")]),t._v(" "),a("li",[t._v("推送服务器将该消息推送至对应的浏览器，用户收到该推送")])]),t._v(" "),a("p",[t._v("服务端推送方法")]),t._v(" "),a("ul",[a("li",[t._v("WebSocket")]),t._v(" "),a("li",[t._v("Https2.0")]),t._v(" "),a("li",[t._v("SSE")]),t._v(" "),a("li",[t._v("长轮询")])]),t._v(" "),a("h2",{attrs:{id:"sse"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sse"}},[t._v("#")]),t._v(" SSE")]),t._v(" "),a("p",[t._v("服务器向客户端声明，接下来要发送的是流信息（streaming）。")]),t._v(" "),a("p",[t._v("也就是说，发送的不是一次性的数据包，而是一个数据流，会连续不断地发送过来。这时，客户端不会关闭连接，会一直等着服务器发过来的新的数据流")]),t._v(" "),a("p",[t._v("SSE(Server-sent events) 就是利用这种机制，使用流信息向浏览器推送信息。它基于 HTTP 协议")]),t._v(" "),a("p",[t._v("SSE 与 WebSocket 作用相似，都是建立浏览器与服务器之间的通信渠道，然后服务器向浏览器推送信息。")]),t._v(" "),a("p",[t._v("总体来说，WebSocket 更强大和灵活。因为它是全双工通道，可以双向通信；SSE 是单向通道，只能服务器向浏览器发送，因为流信息本质上就是下载。如果浏览器向服务器发送信息，就变成了另一次 HTTP 请求。")]),t._v(" "),a("h3",{attrs:{id:"优点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#优点"}},[t._v("#")]),t._v(" 优点")]),t._v(" "),a("ul",[a("li",[t._v("SSE 使用 HTTP 协议，现有的服务器软件都支持。WebSocket 是一个独立协议。")]),t._v(" "),a("li",[t._v("SSE 属于轻量级，使用简单；WebSocket 协议相对复杂。")]),t._v(" "),a("li",[t._v("SSE 默认支持断线重连，WebSocket 需要自己实现。")]),t._v(" "),a("li",[t._v("SSE 一般只用来传送文本，二进制数据需要编码后传送，WebSocket 默认支持传送二进制数据。")]),t._v(" "),a("li",[t._v("SSE 支持自定义发送的消息类型。")])]),t._v(" "),a("h3",{attrs:{id:"eventsource-对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#eventsource-对象"}},[t._v("#")]),t._v(" EventSource 对象")]),t._v(" "),a("p",[t._v("SSE 的客户端 API 部署在EventSource对象上")]),t._v(" "),a("p",[t._v("使用 SSE 时，浏览器首先生成一个EventSource实例，向服务器发起连接。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" source "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EventSource")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("url"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("EventSource实例的readyState属性，表明连接的当前状态。该属性只读，可以取以下值。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("0：")]),t._v(" "),a("p",[t._v("相当于常量EventSource.CONNECTING，表示连接还未建立，或者断线正在重连。")])]),t._v(" "),a("li",[a("p",[t._v("1：")]),t._v(" "),a("p",[t._v("相当于常量EventSource.OPEN，表示连接已经建立，可以接受数据。")])]),t._v(" "),a("li",[a("p",[t._v("2：")]),t._v(" "),a("p",[t._v("相当于常量EventSource.CLOSED，表示连接已断，且不会重连。")])])]),t._v(" "),a("h3",{attrs:{id:"基本用法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本用法"}},[t._v("#")]),t._v(" 基本用法")]),t._v(" "),a("p",[t._v("连接一旦建立，就会触发open事件，可以在onopen属性定义回调函数。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("source"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onopen")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 另一种写法")]),t._v("\nsource"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'open'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("客户端收到服务器发来的数据，就会触发message事件，可以在onmessage属性的回调函数。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("source"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onmessage")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" data "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data\n   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// handle message")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 另一种写法")]),t._v("\nsource"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'message'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" data "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data\n   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// handle message")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"服务端方面"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#服务端方面"}},[t._v("#")]),t._v(" 服务端方面")]),t._v(" "),a("p",[t._v("服务器向浏览器发送的 SSE 数据，必须是 UTF-8 编码的文本，具有如下的 HTTP 头信息。")]),t._v(" "),a("ul",[a("li",[t._v("Content-Type: text/event-stream")]),t._v(" "),a("li",[t._v("Cache-Control: no-cache")]),t._v(" "),a("li",[t._v("Connection: keep-alive")])]),t._v(" "),a("p",[t._v("每一次发送的信息，由若干个message组成，每个message之间用\\n\\n分隔。每个message内部由若干行组成，每一行都是如下格式。")]),t._v(" "),a("p",[t._v("上面的field可以取四个值。")]),t._v(" "),a("ul",[a("li",[t._v("data")]),t._v(" "),a("li",[t._v("event")]),t._v(" "),a("li",[t._v("id")]),t._v(" "),a("li",[t._v("retry")])]),t._v(" "),a("p",[t._v("此外，还可以有冒号开头的行，表示注释。通常，服务器每隔一段时间就会向浏览器发送一个注释，保持连接不中断。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("data字段")]),t._v(" "),a("p",[t._v("数据内容用data字段表示。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("data"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("  message\\n\\n\n")])])]),a("p",[t._v("如果数据很长，可以分成多行，最后一行用\\n\\n结尾，前面行都用\\n结尾。")])]),t._v(" "),a("li",[a("p",[t._v("id字段")]),t._v(" "),a("p",[t._v("数据标识符用id字段表示，相当于每一条数据的编号。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" msg1\\n\ndata"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" message\\n\\n\n")])])]),a("p",[t._v("浏览器用lastEventId属性读取这个值。一旦连接断线，浏览器会发送一个 HTTP 头，里面包含一个特殊的Last-Event-ID头信息，将这个值发送回来，用来帮助服务器端重建连接。因此，这个头信息可以被视为一种同步机制。")])]),t._v(" "),a("li",[a("p",[t._v("event字段")]),t._v(" "),a("p",[t._v("event字段表示自定义的事件类型，默认是message事件。浏览器可以用addEventListener()监听该事件。")]),t._v(" "),a("p",[t._v("未取名表示默认类型")])]),t._v(" "),a("li",[a("p",[t._v("retry 字段")]),t._v(" "),a("p",[t._v("服务器可以用retry字段，指定浏览器重新发起连接的时间间隔。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("retry"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10000")]),t._v("\\n\n")])])]),a("p",[t._v("两种情况会导致浏览器重新发起连接：一种是时间间隔到期，二是由于网络错误等原因，导致连接出错。")])])]),t._v(" "),a("h3",{attrs:{id:"不用websocket，不用http2，不用-woker，那么如何实现服务端推送消息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#不用websocket，不用http2，不用-woker，那么如何实现服务端推送消息"}},[t._v("#")]),t._v(" 不用websocket，不用http2，不用 woker，那么如何实现服务端推送消息")]),t._v(" "),a("p",[t._v("SSE")]),t._v(" "),a("h2",{attrs:{id:"单点登录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#单点登录"}},[t._v("#")]),t._v(" 单点登录⭐️")]),t._v(" "),a("p",[t._v("单点登录，Single Sign On（简称SSO）。")]),t._v(" "),a("p",[t._v("顾名思义，它把两个及以上个产品中的用户登录逻辑抽离出来，达到只输入一次用户名密码，就能同时登录多个产品的效果")]),t._v(" "),a("p",[t._v("SSO 仅仅是一种架构，一种设计，而 CAS 则是实现 SSO 的一种手段。两者是抽象与具体的关系。")]),t._v(" "),a("p",[t._v("CAS （Central Authentication Service）中心授权服务，本身是一个开源协议，分为 1.0 版本和 2.0 版本。")]),t._v(" "),a("blockquote",[a("p",[t._v("1.0 称为基础模式，2.0称为代理模式，适用于存在非 Web 应用之间的单点登录")])]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/0e2c2be35de3cf42744bae6f1238d6e7.webp.jpg",alt:"单点登录"}})]),t._v(" "),a("h2",{attrs:{id:"webdriver"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webdriver"}},[t._v("#")]),t._v(" webdriver")]),t._v(" "),a("p",[t._v("WebDriver 是远程控制接口，可以对用户代理进行控制. 它提供了一个平台和语言中性线协议，作为进程外程序远程指导web浏览器行为的方法")]),t._v(" "),a("p",[t._v("能够编写可在不同平台上的许多浏览器中交替运行的指令集，对于向用户提供一致的体验至关重要。随着web平台上新一轮的开发浪潮、设备的多样化以及对技术之间真正的互操作性的需求，WebDriver为跨浏览器测试提供了工具。")]),t._v(" "),a("p",[t._v("提供了一组接口，用于发现和操作web文档中的DOM元素，并控制用户代理的行为。它的主要目的是允许web作者编写从单独的控制过程中自动执行用户代理的测试，但也可以这样使用，允许浏览器内脚本控制一个（可能是单独的）浏览器。")]),t._v(" "),a("h2",{attrs:{id:"服务端渲染"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#服务端渲染"}},[t._v("#")]),t._v(" 服务端渲染")]),t._v(" "),a("p",[t._v("SSR是Server Side Render简称；页面上的内容是通过服务端渲染生成的，浏览器直接显示服务端返回的html就可以了。")]),t._v(" "),a("p",[t._v("SSR不仅可以减少白屏时间还可以大幅减少首屏加载时间。（客户端只负责解析HTML）")]),t._v(" "),a("blockquote",[a("p",[t._v("同时有利于SEO（搜索引擎优化）")])]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/162f56fdae9b01f6.webp.jpg",alt:"服务端渲染"}})]),t._v(" "),a("h3",{attrs:{id:"服务端渲染（ssr）-vs-预渲染（prerendering）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#服务端渲染（ssr）-vs-预渲染（prerendering）"}},[t._v("#")]),t._v(" 服务端渲染（SSR） VS 预渲染（Prerendering）")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("相同点：")]),t._v(" "),a("p",[t._v("都是解决单页面SEO的问题，更快的内容到达时间。")])]),t._v(" "),a("li",[a("p",[t._v("不同点：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("实现原理和方案不同：")]),t._v(" "),a("p",[t._v("SSR的实现依赖于node.js服务器做服务端构建静态资源，")]),t._v(" "),a("p",[t._v("prerender的实现依赖于webpack集成为prerender-spa-plugin，将静态资源提取出来展示给前端。")])]),t._v(" "),a("li",[a("p",[t._v("服务端渲染可以做到服务端的实时编译，prerender只是在构建时简单的生成针对特定路由的静态HTML文件，来达到SEO的效果，prerender的优点是配置更简单，并可以把前端作为一个完全静态的站点。")])])])])]),t._v(" "),a("h2",{attrs:{id:"前端与服务端用什么通信"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前端与服务端用什么通信"}},[t._v("#")]),t._v(" 前端与服务端用什么通信")]),t._v(" "),a("ul",[a("li",[t._v("WebSocket")]),t._v(" "),a("li",[t._v("Server-sent Events")])]),t._v(" "),a("h3",{attrs:{id:"两个客户端怎么通讯"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#两个客户端怎么通讯"}},[t._v("#")]),t._v(" 两个客户端怎么通讯")]),t._v(" "),a("p",[t._v("postMessage")]),t._v(" "),a("h2",{attrs:{id:"正常的网页加载流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#正常的网页加载流程"}},[t._v("#")]),t._v(" 正常的网页加载流程")]),t._v(" "),a("ol",[a("li",[t._v("浏览器一边下载 HTML 网页，一边开始解析。也就是说，不等到下载完，就开始解析。")]),t._v(" "),a("li",[t._v("解析过程中，浏览器发现script元素，就暂停解析，把网页渲染的控制权转交给 JavaScript 引擎。")]),t._v(" "),a("li",[t._v("如果script元素引用了外部脚本，就下载该脚本再执行，否则就直接执行代码。")]),t._v(" "),a("li",[t._v("JavaScript 引擎执行完毕，控制权交还渲染引擎，恢复往下解析 HTML 网页。")])]),t._v(" "),a("p",[t._v("如果外部脚本加载时间很长（一直无法完成下载），那么浏览器就会一直等待脚本下载完成，")]),t._v(" "),a("p",[t._v("造成网页长时间失去响应，浏览器就会呈现“假死”状态，这被称为“阻塞效应”。")]),t._v(" "),a("h2",{attrs:{id:"代码嵌入网页的方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代码嵌入网页的方法"}},[t._v("#")]),t._v(" 代码嵌入网页的方法")]),t._v(" "),a("h3",{attrs:{id:"script-元素嵌入代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#script-元素嵌入代码"}},[t._v("#")]),t._v(" script 元素嵌入代码")]),t._v(" "),a("p",[t._v("script元素内部可以直接写入 JavaScript 代码。")]),t._v(" "),a("p",[t._v("如果type属性的值，浏览器不认识，那么它不会执行其中的代码。")]),t._v(" "),a("h3",{attrs:{id:"script-元素加载外部脚本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#script-元素加载外部脚本"}},[t._v("#")]),t._v(" script 元素加载外部脚本")]),t._v(" "),a("p",[t._v("script标签也可以指定加载外部的脚本文件。")]),t._v(" "),a("p",[t._v("所加载的脚本必须是纯的 JavaScript 代码，不能有HTML代码和"),a("script")])])}),[],!1,null,null,null);s.default=e.exports}}]);