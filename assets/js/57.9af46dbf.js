(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{316:function(t,a,s){"use strict";s.r(a);var e=s(9),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"dom"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dom"}},[t._v("#")]),t._v(" DOM")]),t._v(" "),s("p",[t._v("DOM 是 JavaScript 操作网页的接口，全称为“文档对象模型”（Document Object Model）。")]),t._v(" "),s("p",[t._v("它的作用是将网页转为一个 JavaScript 对象，从而可以用脚本进行各种操作（比如增删内容）。")]),t._v(" "),s("h2",{attrs:{id:"dom节点类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dom节点类型"}},[t._v("#")]),t._v(" DOM节点类型")]),t._v(" "),s("p",[t._v("节点的类型有七种。")]),t._v(" "),s("ul",[s("li",[t._v("Document：整个文档树的顶层节点")]),t._v(" "),s("li",[t._v("DocumentType：doctype标签（比如!DOCTYPE html）")]),t._v(" "),s("li",[t._v("Element：网页的各种HTML标签（比如body、a等）")]),t._v(" "),s("li",[t._v('Attr：网页元素的属性（比如class="right"）')]),t._v(" "),s("li",[t._v("Text：标签之间或标签包含的文本")]),t._v(" "),s("li",[t._v("Comment：注释")]),t._v(" "),s("li",[t._v("DocumentFragment：文档的片段")])]),t._v(" "),s("p",[t._v("浏览器提供一个原生的节点对象Node，上面这七种节点都继承了Node，因此具有一些共同的属性和方法。")]),t._v(" "),s("p",[t._v("文档的第一层有两个节点，第一个是文档类型节点（!doctype html），")]),t._v(" "),s("p",[t._v("第二个是 HTML 网页的顶层容器标签html。后者构成了树结构的根节点（root node），其他 HTML 标签节点都是它的下级节点。")]),t._v(" "),s("h3",{attrs:{id:"queryselector"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#queryselector"}},[t._v("#")]),t._v(" querySelector")]),t._v(" "),s("p",[t._v("document.querySelector方法接受一个 CSS 选择器作为参数，返回匹配该选择器的元素节点。")]),t._v(" "),s("p",[t._v("如果有多个节点满足匹配条件，则返回第一个匹配的节点。如果没有发现匹配的节点，则返回null。")]),t._v(" "),s("p",[t._v("document.querySelectorAll方法与querySelector用法类似，区别是返回一个NodeList对象，包含所有匹配给定选择器的节点。")]),t._v(" "),s("p",[t._v("这两个方法的参数，可以是逗号分隔的多个 CSS 选择器，返回匹配其中一个选择器的元素节点，这与 CSS 选择器的规则是一致的。")]),t._v(" "),s("p",[t._v("这两个方法都支持复杂的 CSS 选择器。")]),t._v(" "),s("p",[s("strong",[t._v("它们不支持 CSS 伪元素的选择器（比如:first-line和:first-letter）和伪类的选择器（比如:link和:visited），即无法选中伪元素和伪类。")])]),t._v(" "),s("h3",{attrs:{id:"queryselector可以选择伪元素吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#queryselector可以选择伪元素吗"}},[t._v("#")]),t._v(" querySelector可以选择伪元素吗")]),t._v(" "),s("p",[t._v("不支持 CSS 伪元素的选择器（比如:first-line和:first-letter）和伪类的选择器（比如:link和:visited）")]),t._v(" "),s("h3",{attrs:{id:"getelementsbyclassname方法-getelementsbytagname-和-queryselectorall方法-的异同"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getelementsbyclassname方法-getelementsbytagname-和-queryselectorall方法-的异同"}},[t._v("#")]),t._v(" getElementsByClassName方法(getElementsByTagName) 和 querySelectorAll方法 的异同")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("返回值")]),t._v(" "),s("p",[t._v("getElementsByClassName 返回的是 HTMLCollection")]),t._v(" "),s("p",[t._v("querySelectorAll 返回的是 NodeList")])]),t._v(" "),s("li",[s("p",[t._v("是否实时变化")]),t._v(" "),s("p",[t._v("getElementsByClassName 的结果是实时变动的")]),t._v(" "),s("p",[t._v("querySelectorAll 结果不是实时变动的")])]),t._v(" "),s("li",[s("p",[t._v("都可以在元素节点上使用")])])]),t._v(" "),s("h3",{attrs:{id:"getelementsbyclassname和-getelementsbytagname的异同"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getelementsbyclassname和-getelementsbytagname的异同"}},[t._v("#")]),t._v(" getElementsByClassName和 getElementsByTagName的异同")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("大小写")]),t._v(" "),s("p",[t._v("getElementsByTagName大小写不敏感")]),t._v(" "),s("p",[t._v("getElementsByClassName大小写敏感")])]),t._v(" "),s("li",[s("p",[t._v("返回都是HTMLColection")])])]),t._v(" "),s("h3",{attrs:{id:"getelementsbyclassname方法-getelementsbytagname-和-getelementsbyname方法的异同"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getelementsbyclassname方法-getelementsbytagname-和-getelementsbyname方法的异同"}},[t._v("#")]),t._v(" getElementsByClassName方法(getElementsByTagName) 和 getElementsByName方法的异同")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("返回的实例不同")]),t._v(" "),s("p",[t._v("getElementsByClassName 返回的是 HTMLCollection")]),t._v(" "),s("p",[t._v("getElementsByName 返回的是 NodeList")])])]),t._v(" "),s("h3",{attrs:{id:"document-getelementbyid-方法与document-queryselector-方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#document-getelementbyid-方法与document-queryselector-方法"}},[t._v("#")]),t._v(" document.getElementById()方法与document.querySelector()方法")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("document.getElementById()方法与document.querySelector()方法都能获取元素节点")])]),t._v(" "),s("li",[s("p",[t._v("参数")]),t._v(" "),s("p",[t._v("document.querySelector()方法的参数使用 CSS 选择器语法")]),t._v(" "),s("p",[t._v("document.getElementById()方法的参数是元素的id属性。")]),t._v(" "),s("p",[t._v("document.getElementById()比document.querySelector()效率高得多。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("getElementById()只能在document对象上使用，不能在其他元素节点上使用")]),t._v("。")])])]),t._v(" "),s("h3",{attrs:{id:"返回nodelist和htmlcollection"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#返回nodelist和htmlcollection"}},[t._v("#")]),t._v(" 返回NodeList和HTMLCollection")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("NodeList")]),t._v(" "),s("th",[t._v("HTMLCollection")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("document.querySelector()，document.querySelectorAll()（Element也是一样的）")]),t._v(" "),s("td",[t._v("parent.children")])]),t._v(" "),s("tr",[s("td",[t._v("document.getElementsByName()")]),t._v(" "),s("td",[t._v("getElementsByClassName()")])]),t._v(" "),s("tr",[s("td",[t._v("Node.prototype.childNodes（动态集合,特例）")]),t._v(" "),s("td")])])]),t._v(" "),s("h3",{attrs:{id:"offset宽高和client宽高的关系"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#offset宽高和client宽高的关系"}},[t._v("#")]),t._v(" offset宽高和client宽高的关系")]),t._v(" "),s("ul",[s("li",[t._v("Element.offsetHeight = Element.clientHeight + border")]),t._v(" "),s("li",[t._v("Element.offsetWidth = Element.clientWidth + border")])]),t._v(" "),s("h2",{attrs:{id:"domcontentloaded-事件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#domcontentloaded-事件"}},[t._v("#")]),t._v(" DOMContentLoaded 事件⭐️")]),t._v(" "),s("p",[t._v("网页下载并解析完成以后，浏览器就会在document对象上触发 DOMContentLoaded 事件。")]),t._v(" "),s("p",[t._v("这时，仅仅完成了网页的解析（整张页面的 DOM 生成了），所有外部资源（样式表、脚本、iframe 等等）可能还没有下载结束。")]),t._v(" "),s("p",[t._v("也就是说，这个事件比load事件，发生时间早得多。")]),t._v(" "),s("p",[t._v("网页的 JavaScript 脚本是同步执行的，脚本一旦发生堵塞，将推迟触发DOMContentLoaded事件。")]),t._v(" "),s("h2",{attrs:{id:"load-事件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#load-事件"}},[t._v("#")]),t._v(" load 事件")]),t._v(" "),s("p",[t._v("当整个页面及所有依赖资源如样式表和图片都已完成加载时，将触发load事件。")]),t._v(" "),s("p",[t._v("它与DOMContentLoaded不同，后者只要页面DOM加载完成就触发，无需等待依赖资源的加载。")]),t._v(" "),s("p",[t._v("顺序为：")]),t._v(" "),s("p",[t._v("浏览器解析 => 解析HTML节点到DOM树 => DOM树解析完成（触发DOMContentLoaded） => 下载资源并解析资源（包括iframe）  =>  资源全部下载并解析完毕 => 页面加载完成（触发onload）")]),t._v(" "),s("h2",{attrs:{id:"readystatechange-事件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#readystatechange-事件"}},[t._v("#")]),t._v(" readystatechange 事件")]),t._v(" "),s("p",[t._v("readystatechange事件当 Document 对象和 XMLHttpRequest 对象的readyState属性发生变化时触发。")]),t._v(" "),s("p",[t._v("document.readyState有三个可能的值：")]),t._v(" "),s("ul",[s("li",[t._v("loading（网页正在加载）")]),t._v(" "),s("li",[t._v("interactive（网页已经解析完成，但是外部资源仍然处在加载状态）")]),t._v(" "),s("li",[t._v("complete（网页和所有外部资源已经结束加载，load事件即将触发）。")])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("PS")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("值")]),t._v(" "),s("th",[t._v("状态")]),t._v(" "),s("th",[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("0")]),t._v(" "),s("td",[t._v("UNSENT")]),t._v(" "),s("td",[t._v("代理被创建，但尚未调用 open() 方法。")])]),t._v(" "),s("tr",[s("td",[t._v("1")]),t._v(" "),s("td",[t._v("OPENED")]),t._v(" "),s("td",[t._v("open() 方法已经被调用。")])]),t._v(" "),s("tr",[s("td",[t._v("2")]),t._v(" "),s("td",[t._v("HEADERS_RECEIVED")]),t._v(" "),s("td",[t._v("send() 方法已经被调用，并且头部和状态已经可获得。")])]),t._v(" "),s("tr",[s("td",[t._v("3")]),t._v(" "),s("td",[t._v("LOADING")]),t._v(" "),s("td",[t._v("下载中； responseText 属性已经包含部分数据。")])]),t._v(" "),s("tr",[s("td",[t._v("4")]),t._v(" "),s("td",[t._v("DONE")]),t._v(" "),s("td",[t._v("下载操作已完成。")])])])])]),t._v(" "),s("h2",{attrs:{id:"dom事件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dom事件"}},[t._v("#")]),t._v(" DOM事件")]),t._v(" "),s("p",[t._v("事件是javascript和HTML交互基础, 任何文档或者浏览器窗口发生的交互, 都要通过绑定事件进行交互;")]),t._v(" "),s("p",[t._v("DOM事件分为 DOM0级、DOM2级、DOM3级（没有DOM1级）")]),t._v(" "),s("h2",{attrs:{id:"dom0级"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dom0级"}},[t._v("#")]),t._v(" DOM0级")]),t._v(" "),s("ul",[s("li",[t._v("onclick=function(){}")])]),t._v(" "),s("h2",{attrs:{id:"dom2级"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dom2级"}},[t._v("#")]),t._v(" DOM2级")]),t._v(" "),s("ul",[s("li",[t._v("addEventListener(event-name, callback, useCapture)")]),t._v(" "),s("li",[t._v("removeEventListener(event-name, callback, useCapture)")])]),t._v(" "),s("h2",{attrs:{id:"dom3级"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dom3级"}},[t._v("#")]),t._v(" DOM3级")]),t._v(" "),s("p",[t._v("DOM3级事件是在DOM2级事件的基础上添加很多事件类型。")]),t._v(" "),s("ul",[s("li",[t._v("UI事件，当用户与页面上的元素交互时触发，如：load、scroll")]),t._v(" "),s("li",[t._v("焦点事件，当元素获得或失去焦点时触发，如：blur、focus")]),t._v(" "),s("li",[t._v("鼠标事件，当用户通过鼠标在页面执行操作时触发如：dbclick、mouseup")]),t._v(" "),s("li",[t._v("滚轮事件，当使用鼠标滚轮或类似设备时触发，如：mousewheel")]),t._v(" "),s("li",[t._v("文本事件，当在文档中输入文本时触发，如：textInput")]),t._v(" "),s("li",[t._v("键盘事件，当用户通过键盘在页面上执行操作时触发，如：keydown、keypress")]),t._v(" "),s("li",[t._v("合成事件，当为IME（输入法编辑器）输入字符时触发，如：compositionstart")]),t._v(" "),s("li",[t._v("变动事件，当底层DOM结构发生变化时触发，如：DOMsubtreeModified")])]),t._v(" "),s("p",[t._v("同时DOM3级事件也允许使用者自定义一些事件。")]),t._v(" "),s("h3",{attrs:{id:"获取dom"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#获取dom"}},[t._v("#")]),t._v(" 获取DOM")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("document.getElementById('id')")]),t._v(" "),s("p",[t._v("id名,较少使用,一般只用在顶级层")])]),t._v(" "),s("li",[s("p",[t._v("document.getElementsByTagName('p')[i]")]),t._v(" "),s("p",[t._v("标签名")])]),t._v(" "),s("li",[s("p",[t._v("document.getElementsByClassName('class')[i]")]),t._v(" "),s("p",[t._v("类名,常用")])]),t._v(" "),s("li",[s("p",[t._v("document.getElementsByName('name')[i]")]),t._v(" "),s("p",[t._v("name属性值,一般不用")])]),t._v(" "),s("li",[s("p",[t._v("document.querySelector('.class')")]),t._v(" "),s("p",[t._v("css选择符模式，与之匹配的第一个元素,如果没找到,则返回null")])]),t._v(" "),s("li",[s("p",[t._v("document.querySelectorAll('.class')[i]")])]),t._v(" "),s("li",[s("p",[t._v("document.body获取body标签")])]),t._v(" "),s("li",[s("p",[t._v("document.documentElement 获取html标签")])])]),t._v(" "),s("h3",{attrs:{id:"获取dom是异步操作吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#获取dom是异步操作吗"}},[t._v("#")]),t._v(" 获取DOM是异步操作吗")]),t._v(" "),s("p",[t._v("DOM树的修改是同步的(js可以立即获取元素)，渲染到屏幕上是异步的(不一定即时看到)")]),t._v(" "),s("h3",{attrs:{id:"获取dom事件的方法？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#获取dom事件的方法？"}},[t._v("#")]),t._v(" 获取DOM事件的方法？⭐️")]),t._v(" "),s("p",[t._v("控制台命令行 API，getEventListeners(object)方法返回一个对象，该对象的成员为object登记了回调函数的各种事件（比如click或keydown），")]),t._v(" "),s("p",[t._v("每个事件对应一个数组，数组的成员为该事件的回调函数。")]),t._v(" "),s("h3",{attrs:{id:"事件绑定（事件监听）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件绑定（事件监听）"}},[t._v("#")]),t._v(" 事件绑定（事件监听）")]),t._v(" "),s("ul",[s("li",[t._v("HTML 的 on* 属性")]),t._v(" "),s("li",[t._v("元素节点的事件属性")]),t._v(" "),s("li",[t._v("EventTarget.addEventListener()")])]),t._v(" "),s("h3",{attrs:{id:"注销事件绑定的方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#注销事件绑定的方法"}},[t._v("#")]),t._v(" 注销事件绑定的方法")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("removeEventListener()")]),t._v(" "),s("p",[t._v("与addEventListener()相对应，接受3个參数：要处理的事件名、作为事件处理程序的函数和一个布尔值useCapture")]),t._v(" "),s("p",[t._v("不能移除匿名函数")])])]),t._v(" "),s("h3",{attrs:{id:"捕获和冒泡用什么监听"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#捕获和冒泡用什么监听"}},[t._v("#")]),t._v(" 捕获和冒泡用什么监听")]),t._v(" "),s("p",[s("code",[t._v("addEventListener(event,fn,useCapture)。")])]),t._v(" "),s("p",[t._v("event是事件类型click，focus，blur等；")]),t._v(" "),s("p",[t._v("fn是事件触发时将执行的函数方法（function）；")]),t._v(" "),s("p",[t._v("第三个参数可以不传，默认是false，这个参数控制是否捕获触发。所以我们只穿两个参数时，这个事件是冒泡传递触发的，当第三个参数存在且为true时，事件是捕获传递触发的。")]),t._v(" "),s("h3",{attrs:{id:"点击事件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#点击事件"}},[t._v("#")]),t._v(" 点击事件")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("button")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("btn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("onclick")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("threeFn()"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("点我"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("button")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//第一种")]),t._v("\nbtn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onclick")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"这是第一种点击方式"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//第二种")]),t._v("\n btn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'click'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"这是第二中点击方式"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//第三种")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("threeFn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"这是第三种点击方式"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("h3",{attrs:{id:"click事件分解了几次鼠标事件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#click事件分解了几次鼠标事件"}},[t._v("#")]),t._v(" click事件分解了几次鼠标事件")]),t._v(" "),s("p",[t._v("mousedown事件触发、mouseup事件触发")]),t._v(" "),s("h3",{attrs:{id:"mouseover-mouseenter区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mouseover-mouseenter区别"}},[t._v("#")]),t._v(" mouseover mouseenter区别")]),t._v(" "),s("p",[t._v("mouseover事件和mouseenter事件，都是鼠标进入一个节点时触发。")]),t._v(" "),s("p",[t._v("两者的区别是：")]),t._v(" "),s("ul",[s("li",[t._v("mouseenter事件只触发一次，而只要鼠标在节点内部移动，mouseover事件会在子节点上触发多次。")]),t._v(" "),s("li",[t._v("在父节点内部进入子节点，不会触发mouseenter事件，但是会触发mouseover事件。")])]),t._v(" "),s("h3",{attrs:{id:"当手指按下键盘到松开，发生了什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#当手指按下键盘到松开，发生了什么"}},[t._v("#")]),t._v(" 当手指按下键盘到松开，发生了什么")]),t._v(" "),s("p",[t._v("keydown、keypress、keyup")]),t._v(" "),s("h2",{attrs:{id:"事件传播"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件传播"}},[t._v("#")]),t._v(" 事件传播")]),t._v(" "),s("p",[t._v("一个事件发生后，会在子元素和父元素之间传播（propagation）。")]),t._v(" "),s("p",[t._v("这种传播分成三个阶段。")]),t._v(" "),s("ul",[s("li",[t._v("第一阶段：从window对象传导到目标节点（上层传到底层），称为“捕获阶段”（capture phase）。")]),t._v(" "),s("li",[t._v("第二阶段：在目标节点上触发，称为“目标阶段”（target phase）。")]),t._v(" "),s("li",[t._v("第三阶段：从目标节点传导回window对象（从底层传回上层），称为“冒泡阶段”（bubbling phase）。")])]),t._v(" "),s("p",[s("img",{attrs:{src:"/img/eventflow.svg",alt:"事件传播"}})]),t._v(" "),s("p",[t._v("这种三阶段的传播模型，使得同一个事件会在多个节点上触发。")]),t._v(" "),s("p",[t._v("浏览器总是假定（比如click事件）事件的目标节点，就是点击位置嵌套最深的那个节点")]),t._v(" "),s("p",[t._v("所以，目标节点的捕获阶段和冒泡阶段，都会显示为target阶段。")]),t._v(" "),s("h3",{attrs:{id:"event-currenttarget，event-target"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#event-currenttarget，event-target"}},[t._v("#")]),t._v(" Event.currentTarget，Event.target⭐️")]),t._v(" "),s("p",[t._v("事件发生以后，会经过捕获和冒泡两个阶段，依次通过多个 DOM 节点。")]),t._v(" "),s("p",[t._v("因此，任意事件都有两个与事件相关的节点")]),t._v(" "),s("p",[t._v("Event.currentTarget属性返回事件当前所在的节点，即事件当前正在通过的节点，也就是当前正在执行的监听函数所在的那个节点。随着事件的传播，这个属性的值会变。")]),t._v(" "),s("p",[s("strong",[t._v("由于监听函数只有事件经过时才会触发，所以xx.currentTarget总是等同于监听函数内部的this。")])]),t._v(" "),s("p",[t._v("Event.target属性返回原始触发事件的那个节点，即事件最初发生的节点。这个属性不会随着事件的传播而改变。")]),t._v(" "),s("h3",{attrs:{id:"event-preventdefault"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#event-preventdefault"}},[t._v("#")]),t._v(" Event.preventDefault()")]),t._v(" "),s("p",[t._v("Event.preventDefault方法取消浏览器对当前事件的默认行为。")]),t._v(" "),s("p",[t._v("该方法生效的前提是，事件对象的cancelable属性为true，如果为false，调用该方法没有任何效果。")]),t._v(" "),s("p",[t._v("注意，"),s("strong",[t._v("该方法只是取消事件对当前元素的默认影响，不会阻止事件的传播。")])]),t._v(" "),s("p",[s("strong",[t._v("如果要阻止传播，可以使用stopPropagation() 或 stopImmediatePropagation()方法。")])]),t._v(" "),s("h3",{attrs:{id:"event-stoppropagation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#event-stoppropagation"}},[t._v("#")]),t._v(" Event.stopPropagation()⭐️")]),t._v(" "),s("p",[t._v("stopPropagation方法阻止事件在 DOM 中继续传播，防止再触发定义在别的节点上的监听函数")]),t._v(" "),s("p",[t._v("但是不包括在当前节点上其他的事件监听函数。")]),t._v(" "),s("h3",{attrs:{id:"event-stopimmediatepropagation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#event-stopimmediatepropagation"}},[t._v("#")]),t._v(" Event.stopImmediatePropagation()⭐️")]),t._v(" "),s("p",[t._v("Event.stopImmediatePropagation方法阻止同一个事件的其他监听函数被调用，不管监听函数定义在当前节点还是其他节点。")]),t._v(" "),s("p",[t._v("该方法阻止事件的传播，比Event.stopPropagation()更彻底。")]),t._v(" "),s("p",[t._v("如果同一个节点对于同一个事件指定了多个监听函数，这些函数会根据添加的顺序依次调用。")]),t._v(" "),s("p",[t._v("只要其中有一个监听函数调用了Event.stopImmediatePropagation方法，其他的监听函数就不会再执行了。")]),t._v(" "),s("h3",{attrs:{id:"event-composedpath"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#event-composedpath"}},[t._v("#")]),t._v(" Event.composedPath()")]),t._v(" "),s("p",[t._v("Event.composedPath()返回一个数组，成员是事件的最底层节点和依次冒泡经过的所有上层节点。")]),t._v(" "),s("p",[s("strong",[t._v("上层节点会依次经过body、html、document和Window")])]),t._v(" "),s("h2",{attrs:{id:"事件冒泡"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件冒泡"}},[t._v("#")]),t._v(" 事件冒泡")]),t._v(" "),s("p",[t._v("javascript的dom相互嵌套，当点击子元素的时候，事件在子元素上触发，然后事件会逐级向上层传递。这就叫事件冒泡。")]),t._v(" "),s("h3",{attrs:{id:"如何取消冒泡，阻止事件捕获"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何取消冒泡，阻止事件捕获"}},[t._v("#")]),t._v(" 如何取消冒泡，阻止事件捕获")]),t._v(" "),s("p",[t._v("如果希望事件到某个节点为止，不再传播，可以使用事件对象的"),s("code",[t._v("stopPropagation")]),t._v("方法。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 事件传播到 p 元素后，就不再向下传播了")]),t._v("\np"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'click'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  event"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("stopPropagation")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 事件冒泡到 p 元素后，就不再向上冒泡了")]),t._v("\np"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'click'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  event"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("stopPropagation")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[s("strong",[t._v("stopPropagation方法只会阻止事件的传播，不会阻止该事件触发p节点的其他click事件的监听函数。")])]),t._v(" "),s("p",[t._v("也就是说，stopPropagation方法只会阻止事件的传播，不会彻底取消click事件。")]),t._v(" "),s("h3",{attrs:{id:"彻底取消事件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#彻底取消事件"}},[t._v("#")]),t._v(" 彻底取消事件")]),t._v(" "),s("p",[t._v("如果想要彻底取消该事件，不再触发后面所有click的监听函数，可以使用"),s("code",[t._v("stopImmediatePropagation")]),t._v("方法。")]),t._v(" "),s("h3",{attrs:{id:"哪些元素或事件不能冒泡"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#哪些元素或事件不能冒泡"}},[t._v("#")]),t._v(" 哪些元素或事件不能冒泡")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("scroll 事件")]),t._v(" "),s("p",[t._v("scroll 事件无法取消")])]),t._v(" "),s("li",[s("p",[t._v("focus 和 blur 事件")]),t._v(" "),s("p",[t._v("同时也无法取消")]),t._v(" "),s("p",[t._v("PS：focusout/focusin。它们和前者的主要区别就是 focusout/focusin 事件会冒泡。")])]),t._v(" "),s("li",[s("p",[t._v("audio、video 触发的事件，一般不冒泡")])]),t._v(" "),s("li",[s("p",[t._v("mouseleave 和 mouseenter 事件同样不会冒泡")]),t._v(" "),s("p",[t._v("PS：mouseout/mouseover，它们的区别就是 mouseout/mouseover 会触发冒泡")])])]),t._v(" "),s("h2",{attrs:{id:"事件代理（委托）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件代理（委托）"}},[t._v("#")]),t._v(" 事件代理（委托）")]),t._v(" "),s("p",[t._v("由于事件会在冒泡阶段向上传播到父节点，因此可以把子节点的监听函数定义在父节点上，由父节点的监听函数统一处理多个子元素的事件。这种方法叫做事件委托")]),t._v(" "),s("p",[t._v("事件委托是利用事件的冒泡原理来实现的。")]),t._v(" "),s("h3",{attrs:{id:"优点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#优点"}},[t._v("#")]),t._v(" 优点")]),t._v(" "),s("ul",[s("li",[t._v("可以大量节省内存占用，减少事件注册。")]),t._v(" "),s("li",[t._v("可以实现当新增子对象时，无需再对其进行事件绑定，对于动态内容部分尤为合适")])]),t._v(" "),s("h3",{attrs:{id:"存在的问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#存在的问题"}},[t._v("#")]),t._v(" 存在的问题")]),t._v(" "),s("p",[t._v("mouseover和mouseout虽然也有事件冒泡，但是处理它们的时候需要特别的注意，因为需要经常计算它们的位置，处理起来不太容易。")]),t._v(" "),s("p",[t._v("而且focus，blur之类的，本身就没用冒泡的特性，自然就不能用事件委托了。")]),t._v(" "),s("p",[t._v("存在导致事件误触发的可能。")]),t._v(" "),s("h2",{attrs:{id:"动态创建script的方法-？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#动态创建script的方法-？"}},[t._v("#")]),t._v(" 动态创建script的方法 ？")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("loadScriptString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("code")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" script "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"script"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//创建一个script标签")]),t._v("\n\tscript"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text/javascript"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//下面为必要操作 否则将不能使用script标签中的内容")]),t._v("\n\tscript"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("onload "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" script"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onreadystatechange")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("readyState "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("readyState "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"loaded"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("readyState "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"complete"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        \tscript"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("onload "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" script"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("onreadystatechange "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//添加src属性值")]),t._v("\n\tscript"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("src"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//url为添加js 文件的路径")]),t._v("\n\tdocument"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementsByTagName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'head'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("appendChild")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("script"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("把script并放入DOM树中，注意script可以放入head中，不会阻塞渲染，和放入body中一样的效果")]),t._v(" "),s("h2",{attrs:{id:"聚焦和失焦"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#聚焦和失焦"}},[t._v("#")]),t._v(" 聚焦和失焦")]),t._v(" "),s("p",[t._v("focus事件在元素获取焦点时触发. 这个事件和 focusin 最大的区别仅仅在于后者会事件冒泡.")]),t._v(" "),s("p",[t._v("当一个元素失去焦点的时候 blur 事件被触发。它和 focusout 事件的主要区别是 focusout 支持冒泡。")]),t._v(" "),s("h2",{attrs:{id:"子元素如何调用父元素的方法和变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#子元素如何调用父元素的方法和变量"}},[t._v("#")]),t._v(" 子元素如何调用父元素的方法和变量⭐️")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("parentNode属性")]),t._v(" "),s("p",[t._v("parentNode属性返回当前节点的父节点。")]),t._v(" "),s("p",[t._v("对于一个节点来说，它的父节点只可能是三种类型：元素节点（element）、文档节点（document）和文档片段节点（documentfragment）。")])]),t._v(" "),s("li",[s("p",[t._v("parentElement获取父节点")])])]),t._v(" "),s("h3",{attrs:{id:"获取子节点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#获取子节点"}},[t._v("#")]),t._v(" 获取子节点")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("children")]),t._v(" "),s("p",[t._v("Element.children属性返回一个类似数组的对象（HTMLCollection实例）")])]),t._v(" "),s("li",[s("p",[t._v("childNodes()")]),t._v(" "),s("p",[t._v("childNodes属性返回一个类似数组的对象（NodeList集合），成员包括当前节点的所有子节点。")])]),t._v(" "),s("li",[s("p",[t._v("Element.firstElementChild，Element.lastElementChild")]),t._v(" "),s("p",[t._v("第一个和最后一个子节点")])])]),t._v(" "),s("h3",{attrs:{id:"获取兄弟节点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#获取兄弟节点"}},[t._v("#")]),t._v(" 获取兄弟节点")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("获取父节点后获取其子节点数组")])]),t._v(" "),s("li",[s("p",[t._v("previousSibling和previousElementSibling。")]),t._v(" "),s("p",[t._v("previousSibling会匹配字符，包括换行和空格，而不是节点。previousElementSibling则直接匹配节点。")])]),t._v(" "),s("li",[s("p",[t._v("nextSibling和nextElementSibling")]),t._v(" "),s("p",[t._v("两者的区别也是类似的。")])])]),t._v(" "),s("h2",{attrs:{id:"dom和bom"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dom和bom"}},[t._v("#")]),t._v(" DOM和BOM")]),t._v(" "),s("p",[t._v("DOM（文档对象模型）是 HTML 和 XML 的应用程序接口（API）。")]),t._v(" "),s("p",[t._v("BOM 主要处理浏览器窗口和框架，不过通常浏览器特定的 JavaScript 扩展都被看做 BOM 的一部分。（浏览器的标签页，地址栏，搜索栏，书签栏，窗口放大还原关闭按钮，菜单栏等等）")]),t._v(" "),s("p",[t._v("BOM是浏览器对象模型，DOM是文档对象模型，DOM描述了处理网页内容的方法和接口，BOM描述了与浏览器进行交互的方法和接口")]),t._v(" "),s("h2",{attrs:{id:"遍历dom"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#遍历dom"}},[t._v("#")]),t._v(" 遍历DOM⭐️")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("NodeIterator")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" nodeIterator "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createNodeIterator")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("root"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" whatToShow"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" filter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("NodeIterator.root 只读，返回一个Node ，它代表创建 NodeIterator 时指定的根节点。")]),t._v(" "),s("p",[t._v("NodeIterator.referenceNode 只读，返回当前遍历到的 Node .")]),t._v(" "),s("p",[t._v("NodeIterator.previousNode()，返回前一个 Node ，如果不存在则返回 null.")]),t._v(" "),s("p",[t._v("NodeIterator.nextNode()，返回下一个 Node , 如果不存在则返回null .")])]),t._v(" "),s("li",[s("p",[t._v("TreeWalker")]),t._v(" "),s("p",[t._v("TreeWalker 可以使用 "),s("code",[t._v("Document.createTreeWalker()")]),t._v(" 方法创建。")]),t._v(" "),s("p",[t._v("TreeWalker.parentNode()，移动当前 Node到文档顺序中的第一个“可见”的祖先节点，并返回该节点。如果没有这样的节点，则会返回 null  ，同时也不会发生移动。")]),t._v(" "),s("p",[t._v("TreeWalker.firstChild()，移动当前 Node到当前节点的第一个“可见”子节点，并返回该节点。如果没有这样的节点，则会返回 null  ，同时也不会发生移动。")]),t._v(" "),s("p",[t._v("TreeWalker.lastChild()，移动当前 Node到当前节点的最末一个“可见”子节点，并返回该节点。如果没有这样的节点，则会返回 null  ，同时也不会发生移动。")]),t._v(" "),s("p",[t._v("TreeWalker.previousSibling()，移动当前 Node到当前节点的前一个兄弟节点，并返回该节点。如果没有这样的节点，则会返回 null  ，同时也不会发生移动。")]),t._v(" "),s("p",[t._v("TreeWalker.nextSibling()，移动当前 Node到当前节点的后一个兄弟节点，并返回该节点。如果没有这样的节点，则会返回 null  ，同时也不会发生移动。")]),t._v(" "),s("p",[t._v("TreeWalker.previousNode()，移动当前 Node到文档顺序中前一个节点，并返回该节点。如果没有这样的节点，则会返回 null  ，同时也不会发生移动。")]),t._v(" "),s("p",[t._v("TreeWalker.nextNode()，移动当前 Node到文档顺序中下一个节点，并返回该节点。如果没有这样的节点，则会返回 null  ，同时也不会发生移动。")])]),t._v(" "),s("li",[s("p",[t._v('document.getElementById("root")，然后使用for of')])]),t._v(" "),s("li",[s("p",[t._v("generator + element.nextElementSibling;")])])]),t._v(" "),s("h3",{attrs:{id:"假如有一个分支层级很深，并且里面没有img标签，不递归到底，有没有什么办法解决这个问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#假如有一个分支层级很深，并且里面没有img标签，不递归到底，有没有什么办法解决这个问题"}},[t._v("#")]),t._v(" 假如有一个分支层级很深，并且里面没有img标签，不递归到底，有没有什么办法解决这个问题⭐️")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("child"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("innerHTML"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("indexOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'<img'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dfs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("child"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h2",{attrs:{id:"window-open"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#window-open"}},[t._v("#")]),t._v(" window.open")]),t._v(" "),s("p",[t._v("Window 接口的 open() 方法，是用指定的名称将指定的资源加载到浏览器上下文（窗口 window ，内嵌框架 iframe 或者标签 tab ）。")]),t._v(" "),s("p",[t._v("如果没有指定名称，则一个新的窗口会被打开并且指定的资源会被加载进这个窗口的浏览器上下文中。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" windowObjectReference "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("strUrl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" strWindowName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("strWindowFeatures"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//strUrl === 要在新打开的窗口中加载的URL。")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//strWindowName === 新窗口的名称。")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//strWindowFeatures === 一个可选参数，列出新窗口的特征(大小，位置，滚动条等)")]),t._v("\n")])])]),s("p",[t._v("调用window.open()方法以后，远程 URL 不会被立即载入，载入过程是异步的。（实际加载这个URL的时间推迟到当前脚本块执行结束之后。窗口的创建和相关资源的加载异步地进行。）")]),t._v(" "),s("h2",{attrs:{id:"js获取css的一个class"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js获取css的一个class"}},[t._v("#")]),t._v(" js获取css的一个class")]),t._v(" "),s("p",[t._v("Element.className，className属性用来读写当前元素节点的class属性。它的值是一个字符串，每个class之间用空格分割。")]),t._v(" "),s("h2",{attrs:{id:"js-设置-css"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js-设置-css"}},[t._v("#")]),t._v(" js 设置 css")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("element.style.height")]),t._v(" "),s("p",[t._v("如果属性有'-'号，就写成驼峰的形式（如textAlign）  如果想保留 - 号，就中括号的形式  element.style['text-align'] = '100px';")])]),t._v(" "),s("li",[s("p",[t._v("element.setAttribute('height', 100);")])]),t._v(" "),s("li",[s("p",[t._v("设置cssText")]),t._v(" "),s("p",[t._v("element.style.cssText = 'height: 100px !important';")])]),t._v(" "),s("li",[s("p",[t._v("使用addRule、insertRule")]),t._v(" "),s("p",[t._v("在原有样式操作")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("styleSheets"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addRule")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.box'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'height: 100px'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ndocument"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("styleSheets"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("insertRule")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.box {height: 100px}'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 或者插入新样式时操作       ")]),t._v("\n")])])])])]),t._v(" "),s("h2",{attrs:{id:"原生操作-dom-的-api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原生操作-dom-的-api"}},[t._v("#")]),t._v(" 原生操作 DOM 的 api")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.cnblogs.com/loverows/p/9633857.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考"),s("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=n.exports}}]);