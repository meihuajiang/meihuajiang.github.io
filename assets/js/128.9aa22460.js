(window.webpackJsonp=window.webpackJsonp||[]).push([[128],{386:function(a,t,s){"use strict";s.r(t);var r=s(9),v=Object(r.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h2",{attrs:{id:"线程和进程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#线程和进程"}},[a._v("#")]),a._v(" 线程和进程")]),a._v(" "),s("p",[a._v("进程是 CPU 资源分配的最小单位（是能拥有资源和独立运行的最小单位）。")]),a._v(" "),s("p",[a._v("线程是 CPU 调度的最小单位（是建立在进程基础上的一次程序运行单位）。")]),a._v(" "),s("p",[s("strong",[a._v("由于每个进程至少要做一件事,所以一个进程至少有一个线程。")])]),a._v(" "),s("p",[a._v("系统会给每个进程分配独立的内存,因此进程有它独立的资源。同一进程内的各个线程之间共享该进程的内存空间（包括代码段,数据集,堆等）。")]),a._v(" "),s("p",[a._v("借用一个生动的比喻来说,进程就像是一个有边界的生产厂间,而线程就像是厂间内的一个个员工,可以自己做自己的事情,也可以相互配合做同一件事情。")]),a._v(" "),s("h3",{attrs:{id:"进程的基本状态"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#进程的基本状态"}},[a._v("#")]),a._v(" 进程的基本状态")]),a._v(" "),s("h3",{attrs:{id:"内存如何分配"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内存如何分配"}},[a._v("#")]),a._v(" 内存如何分配")]),a._v(" "),s("h3",{attrs:{id:"分别用什么解决线程安全和进程安全问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分别用什么解决线程安全和进程安全问题"}},[a._v("#")]),a._v(" 分别用什么解决线程安全和进程安全问题")]),a._v(" "),s("h2",{attrs:{id:"作业"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#作业"}},[a._v("#")]),a._v(" 作业")]),a._v(" "),s("h2",{attrs:{id:"进程间通信"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#进程间通信"}},[a._v("#")]),a._v(" 进程间通信")]),a._v(" "),s("h2",{attrs:{id:"磁盘寻道算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#磁盘寻道算法"}},[a._v("#")]),a._v(" 磁盘寻道算法")]),a._v(" "),s("h2",{attrs:{id:"进程调度算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#进程调度算法"}},[a._v("#")]),a._v(" 进程调度算法")]),a._v(" "),s("ul",[s("li",[a._v("先来先去服务")]),a._v(" "),s("li",[a._v("时间片轮转法")]),a._v(" "),s("li",[a._v("多级反馈队列算法")]),a._v(" "),s("li",[a._v("最短进程优先")]),a._v(" "),s("li",[a._v("最短剩余时间优先")]),a._v(" "),s("li",[a._v("最高响应比优先")]),a._v(" "),s("li",[a._v("多级反馈队列调度算法")])]),a._v(" "),s("h2",{attrs:{id:"死锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#死锁"}},[a._v("#")]),a._v(" 死锁")]),a._v(" "),s("h2",{attrs:{id:"数据库内容"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据库内容"}},[a._v("#")]),a._v(" 数据库内容")]),a._v(" "),s("h3",{attrs:{id:"acid"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#acid"}},[a._v("#")]),a._v(" ACID")]),a._v(" "),s("h3",{attrs:{id:"事务的概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事务的概念"}},[a._v("#")]),a._v(" 事务的概念")]),a._v(" "),s("h3",{attrs:{id:"索引有多少种"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#索引有多少种"}},[a._v("#")]),a._v(" 索引有多少种")]),a._v(" "),s("h3",{attrs:{id:"数据库优化查找速度-索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据库优化查找速度-索引"}},[a._v("#")]),a._v(" 数据库优化查找速度-索引")]),a._v(" "),s("h3",{attrs:{id:"加索引的优缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#加索引的优缺点"}},[a._v("#")]),a._v(" 加索引的优缺点")]),a._v(" "),s("h3",{attrs:{id:"乐观锁悲观锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#乐观锁悲观锁"}},[a._v("#")]),a._v(" 乐观锁悲观锁")]),a._v(" "),s("h3",{attrs:{id:"mysql-为什么要使用索引？mysql使用b-树，为什么？b树和b-树的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mysql-为什么要使用索引？mysql使用b-树，为什么？b树和b-树的区别"}},[a._v("#")]),a._v(" mysql 为什么要使用索引？mysql使用B+树，为什么？B树和B+树的区别")]),a._v(" "),s("h3",{attrs:{id:"如何保证数据库只存正确的数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何保证数据库只存正确的数据"}},[a._v("#")]),a._v(" 如何保证数据库只存正确的数据")]),a._v(" "),s("h3",{attrs:{id:"为什么数据库选择mongodb"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么数据库选择mongodb"}},[a._v("#")]),a._v(" 为什么数据库选择mongodb")]),a._v(" "),s("h3",{attrs:{id:"mysql和mongodb的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mysql和mongodb的区别"}},[a._v("#")]),a._v(" mysql和mongodb的区别")]),a._v(" "),s("h3",{attrs:{id:"数据库中密码的存储方式，密码相同的情况下怎么处理？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据库中密码的存储方式，密码相同的情况下怎么处理？"}},[a._v("#")]),a._v(" 数据库中密码的存储方式，密码相同的情况下怎么处理？")])])}),[],!1,null,null,null);t.default=v.exports}}]);